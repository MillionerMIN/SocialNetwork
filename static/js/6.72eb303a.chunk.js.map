{"version":3,"sources":["components/Container.module.scss","utils/validation/validation.ts","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.scss","hoc/WithAuthRedirect.tsx","components/Chats/Chats.module.css","components/Chats/ChatMessage/ChatMessage.tsx","components/Chats/DialogsItem/DialogItem.tsx","components/Chats/Chats.tsx","components/Chats/ChatsContainer.tsx"],"names":["module","exports","required","value","maxLengthCreate","maxLength","length","FormControls","props","meta","error","touched","children","hasError","className","s","Textarea","input","restProps","Input","FormError","createField","name","placeholder","component","validate","text","mapStateToPropsForRiderect","state","isAuth","auth","withAuthRedirect","ChildComp","connect","to","ChatMessage","message","DialogsItem","id","path","dialog","activeClassName","active","prof","src","alt","subtitle","subtext","maxLength50","AddNewMessagesRedux","reduxForm","form","writeMessages","onSubmit","handleSubmit","Field","Chats","sendMessageAC","dialogElements","map","c","chatMessageElement","chats","m","container","dialogs","visitors","title","visitor","header","messages","values","ChatsContainer","this","Component","compose","chatsPage","withRouter"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,+B,iCCD9B,oEAAO,IAAMC,EAAW,SAACC,GACtB,IAAIA,EACJ,MAAO,qBAGGC,EAAkB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,cAAN,OAAqBA,EAArB,e,qOCFpCE,EAAe,SAACC,GAAgB,IAAD,EACUA,EAApCC,KAAMC,EADoB,EACpBA,MAAOC,EADa,EACbA,QAAUC,EAAaJ,EAAbI,SACzBC,EAAWH,GAASC,EAC1B,OACG,sBAAKG,UAAWD,EAAWE,IAAEL,MAAQ,GAArC,UACIE,EACAC,GAAY,+BAAOH,QAKhBM,EAAW,SAACR,GAAgB,IAC9BS,EAAwBT,EAAxBS,MAAUC,EADmB,YACLV,EADK,WAErC,OAAO,cAACD,EAAD,2BAAkBC,GAAlB,aAAyB,oDAAcS,GAAWC,QAG/CC,EAAQ,SAACX,GAAgB,IAC3BS,EAA8BT,EAA9BS,MAAgBC,GAAcV,EAAvBC,KADmB,YACID,EADJ,mBAElC,OAAO,cAACD,EAAD,2BAAkBC,GAAlB,aAAyB,iDAAWS,GAAWC,QAG5CE,EAAY,SAACZ,GACvB,OAAO,cAACD,EAAD,2BAAkBC,GAAlB,aAAyB,+CAASA,GAAT,aAAiBA,EAAME,aAG7CW,EAAc,SAACC,EAAcC,GAAoF,IAAxDC,EAAuD,uDAA3C,GAAIC,EAAuC,uCAAzBjB,EAAyB,uCAAZkB,EAAY,uDAAP,GACnH,OAAO,cAAC,IAAD,yBACJJ,KAAMA,EACNC,YAAaA,EACbC,UAAWA,EACXC,SAAUA,GACNjB,GACAkB,M,oBCnCV1B,EAAOC,QAAU,CAAC,MAAQ,8B,mHCSpB0B,EAA6B,SAACC,GACjC,MAAO,CACJC,OAAQD,EAAME,KAAKD,SAIlB,SAASE,EAAqBC,GAQlC,OADiCC,YAAQN,EAARM,EALP,SAACzB,GAAoB,IACrCqB,EAAwBrB,EAAxBqB,OAAWX,EADyB,YACZV,EADY,YAE3C,OAAKqB,EACE,cAACG,EAAD,eAAed,IADF,cAAC,IAAD,CAAUgB,GAAG,gB,oBCnBvClC,EAAOC,QAAU,CAAC,QAAU,uBAAuB,SAAW,wBAAwB,MAAQ,qBAAqB,QAAU,uBAAuB,OAAS,sBAAsB,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,wBAAwB,OAAS,sBAAsB,QAAU,uBAAuB,OAAS,sBAAsB,cAAgB,+B,yGCEtX,SAASkC,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,QAC1B,OAAO,8BAAMA,I,8BCOV,SAASC,EAAY7B,GAA8B,IAC9Cc,EAAmBd,EAAnBc,KAAMgB,EAAa9B,EAAb8B,GAAIZ,EAASlB,EAATkB,KACda,EAAO,UAAYD,EACvB,OAAO,qBAAKxB,UAAWC,IAAEyB,OAAlB,SACH,eAAC,IAAD,CAASN,GAAIK,EAAME,gBAAiB1B,IAAE2B,OAAQ5B,UAAWC,IAAE4B,KAA3D,UACI,qBAAKC,IAAI,iIAAiIC,IAAI,QAC9I,qBAAK/B,UAAWC,IAAE+B,SAAlB,SAA6BxB,IAC7B,mBAAGR,UAAWC,IAAEgC,QAAhB,SAA0BrB,S,0DCgCtC,IAAMsB,EAAc5C,YAAgB,IAe9B6C,EAAsBC,YAA2B,CAAEC,KAAM,wBAAnCD,EAbyC,SAAC1C,GAClE,OACI,uBAAMM,UAAWC,IAAEqC,cAAeC,SAAU7C,EAAM8C,aAAlD,UACI,cAACC,EAAA,EAAD,CAAO/B,UAAWR,IACdM,KAAK,UACLG,SAAU,CAACvB,IAAU8C,GACrBzB,YAAY,uBAEhB,gDAMGiC,EA/Cf,SAAehD,GAAwB,IAC3BoB,EAAyBpB,EAAzBoB,MAAO6B,EAAkBjD,EAAlBiD,cAEXC,EAAiB9B,EAAMY,OAAOmB,KAAI,SAAAC,GAAC,OAAI,cAACvB,EAAD,CAAwBf,KAAMsC,EAAEtC,KAAMgB,GAAIsB,EAAEtB,GAAIZ,KAAMkC,EAAElC,MAAtCkC,EAAEtB,OAC3DuB,EAAqBjC,EAAMkC,MAAMH,KAAI,SAAAI,GAAC,OAAI,cAAC5B,EAAD,CAAwBG,GAAIyB,EAAEzB,GAAIF,QAAS2B,EAAE3B,SAA3B2B,EAAEzB,OAMlE,OACI,qBAAKxB,UAAW8C,IAAEI,UAAlB,SACI,sBAAKlD,UAAWC,IAAEkD,QAAlB,UACI,sBAAKnD,UAAWC,IAAEmD,SAAlB,UACI,qBAAKpD,UAAWC,IAAEoD,MAAlB,mBACA,qBAAKrD,UAAWC,IAAEqD,QAAlB,SACKV,OAGT,sBAAK5C,UAAWC,IAAE+C,MAAlB,UACI,qBAAKhD,UAAWC,IAAEsD,OAAlB,mCACA,qBAAKvD,UAAWC,IAAEuD,SAAlB,SACKT,IAEL,cAACZ,EAAD,CAAqBI,SAlBjB,SAACkB,GACjBd,EAAcc,EAAOnC,qB,gCChBvBoC,E,4JACF,WAEI,OAAO,cAAC,EAAD,eAAWC,KAAKjE,Y,GAHFkE,aAadC,sBACX1C,aAPoB,SAACL,GACrB,MAAO,CACHA,MAAOA,EAAMgD,aAKQ,CAAEnB,oBAC3BoB,IACA9C,IAHW4C,CAIbH","file":"static/js/6.72eb303a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lHqDY\"};","export const required = (value: any) => {\n   if (value) return undefined;\n   return 'Field is required';\n}\n\nexport const maxLengthCreate = (maxLength: number) => (value: any) => {\n   if (value && value.length > maxLength) return `Max length ${maxLength} symbels`;\n   return undefined;\n}","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport s from './FormControls.module.scss'\n\nconst FormControls = (props: any) => {\n   const { meta:{error, touched}, children } = props;\n   const hasError = error && touched\n   return (\n      <div className={hasError ? s.error : ''}>\n         {children}\n         {hasError && <span>{error}</span>}\n      </div>\n   );\n}\n\nexport const Textarea = (props: any) => {\n   const { input, ...restProps } = props;\n   return <FormControls {...props}><textarea {...input} {...restProps} /></FormControls>\n}\n\nexport const Input = (props: any) => {\n   const { input, meta, ...restProps } = props;\n   return <FormControls {...props}><input {...input} {...restProps} /></FormControls>\n}\n\nexport const FormError = (props: any) => {\n   return <FormControls {...props}><div {...props}>{props.error}</div></FormControls>\n}\n\nexport const createField = (name: string, placeholder: string | null, component = {}, validate: {}, props?: any, text='') => {\n   return <Field\n      name={name}\n      placeholder={placeholder}\n      component={component}\n      validate={validate}\n      {...props}\n      {...text}\n   />\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error___hLaz\"};","import React, {  ComponentType } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AppStateType } from \"../redux/redux-store\";\nimport { connect } from 'react-redux';\n\n\ntype MSTPType = {\n   isAuth: boolean\n}\n\nconst mapStateToPropsForRiderect = (state: AppStateType): MSTPType => {\n   return {\n      isAuth: state.auth.isAuth\n   }\n}\n\nexport function withAuthRedirect <T>(ChildComp: ComponentType<T>) {\n\n   const RedirectComponent = (props: MSTPType)=> {\n      const {isAuth, ...restProps} = props;\n      if (!isAuth) return <Redirect to='/login' />;\n      return <ChildComp {...restProps as T} />\n   }\n   let ConnectedRedirectComponent = connect(mapStateToPropsForRiderect)(RedirectComponent)\n   return ConnectedRedirectComponent;\n}\n   \n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Chats_dialogs__102i9\",\"visitors\":\"Chats_visitors__rKPeW\",\"title\":\"Chats_title__3nLll\",\"visitor\":\"Chats_visitor__5e6Ur\",\"dialog\":\"Chats_dialog__1kTv-\",\"prof\":\"Chats_prof__2oRJ2\",\"chats\":\"Chats_chats__3FOMc\",\"subtitle\":\"Chats_subtitle__2LEZs\",\"active\":\"Chats_active__1bDLe\",\"subtext\":\"Chats_subtext__2iFhQ\",\"header\":\"Chats_header__3cg_D\",\"writeMessages\":\"Chats_writeMessages__1HCFC\"};","import React from \"react\";\nimport { ChatMessageType } from \"../../../redux/chats-reducer\";\n\nexport function ChatMessage({ message}: ChatMessageType) {\n    return <div>{message}</div>\n}","import React from \"react\";\nimport s from \"../Chats.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\n\ntype DialogsItemPropsType = {\n    name: string\n    id: number\n    text: string\n}\n\nexport function DialogsItem(props: DialogsItemPropsType) {\n    const { name, id, text } = props\n    let path = '/chats/' + id;\n    return <div className={s.dialog}>\n        <NavLink to={path} activeClassName={s.active} className={s.prof}>\n            <img src=\"https://static-s.aa-cdn.net/img/gp/20600007187994/ytM4AkndmSigMvuUChoY1JuV1VtjoBrbMm2E-B0f9q19lVJ633gm6_-Oexe1PPaHCG0=s300?v=1\" alt=\"ava\" />\n            <div className={s.subtitle}>{name}</div>\n            <p className={s.subtext}>{text}</p>\n        </NavLink>\n    </div>\n}\n\n\n\n\n\n","import React from 'react';\nimport { ChatsPageType } from '../../redux/store';\nimport { ChatMessage } from './ChatMessage/ChatMessage';\nimport { DialogsItem } from \"./DialogsItem/DialogItem\";\n//import css\nimport c from '../Container.module.scss';\nimport s from './Chats.module.css';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { ChatMessageType } from '../../redux/chats-reducer';\nimport { maxLengthCreate, required } from '../../utils/validation/validation';\nimport { Textarea } from '../common/FormControls/FormControls';\n\ntype ChatsPropsType = {\n    state: ChatsPageType\n    isAuth: boolean\n    sendMessageAC: (message: string) => void\n    onNewMessageChange: (body: any) => void\n}\n\nfunction Chats(props: ChatsPropsType) {\n    const { state, sendMessageAC } = props;\n\n    let dialogElements = state.dialog.map(c => <DialogsItem key={c.id} name={c.name} id={c.id} text={c.text} />)\n    let chatMessageElement = state.chats.map(m => <ChatMessage key={m.id} id={m.id} message={m.message} />)\n\n    let addNewMessage = (values: any) => {\n        sendMessageAC(values.message)\n    }\n\n    return (\n        <div className={c.container}>\n            <div className={s.dialogs}>\n                <div className={s.visitors}>\n                    <div className={s.title}>Chats</div>\n                    <div className={s.visitor}>\n                        {dialogElements}\n                    </div>\n                </div>\n                <div className={s.chats}>\n                    <div className={s.header}>Chat with Kyle Fisher</div>\n                    <div className={s.messages}>\n                        {chatMessageElement}\n                    </div>\n                    <AddNewMessagesRedux onSubmit={addNewMessage} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst maxLength50 = maxLengthCreate(50)\n\nconst AddNewMessages: React.FC<InjectedFormProps<ChatMessageType>> = (props) => {\n    return (\n        <form className={s.writeMessages} onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                name='message'\n                validate={[required, maxLength50]}\n                placeholder='Enter your message'>\n            </Field>\n            <button>Send</button>\n        </form>\n    )\n}\n\nconst AddNewMessagesRedux = reduxForm<ChatMessageType>({ form: 'dialogAddMessageForm' })(AddNewMessages)\nexport default Chats;","import { sendMessageAC } from '../../redux/chats-reducer';\nimport Chats from './Chats';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { Component } from 'react';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\n\n\nclass ChatsContainer extends Component {\n    render() {\n        //@ts-ignore\n        return <Chats {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state.chatsPage,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, { sendMessageAC, }),\n    withRouter,\n    withAuthRedirect\n)(ChatsContainer);\n"],"sourceRoot":""}