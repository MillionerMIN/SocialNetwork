{"version":3,"sources":["api/api.ts","api/usersApi.ts","components/Navigation/Navigation.module.scss","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Footer/footer_logo.png","components/Footer/Footer.tsx","components/Navigation/icons/Logo.png","components/Navigation/item/Item.tsx","components/Navigation/search/Search.tsx","components/Navigation/item/icons/chats.svg","components/Navigation/item/icons/posts.svg","components/Navigation/item/icons/music.svg","components/Navigation/item/icons/setting.svg","components/Navigation/item/icons/users.svg","components/Navigation/item/icons/other.svg","components/Navigation/Navigation.tsx","components/Navigation/NavigationContainer.tsx","hoc/withSuspense.tsx","components/App/App.tsx","index.tsx","components/Footer/Footer.module.scss","components/Login/Account/Acount.module.scss","redux/profile-reducer.ts","components/Navigation/item/Item.module.scss","components/common/Spinner/Spinner.tsx","redux/chats-reducer.ts","components/Login/Account/Account.tsx","utils/object-helper.ts","redux/users-reducer.ts","components/Navigation/search/Search.module.scss"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","pageNumber","pageSize","get","postFollow","userId","post","deleteFollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","loginout","module","exports","intilitionState","id","isAuth","authReducer","state","action","type","payload","setAuthUserDataAC","getAuthUserDataTC","dispatch","a","response","data","resultCode","loginTC","message","messages","length","stopSubmit","_error","loginoutTC","initialized","combineReducers","postsPage","profileReducer","chatsPage","chatsReducer","usersPage","usersReducer","profilePage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","window","__store__","Footer","className","s","footer","wrapper","src","logo","alt","navigation","access","language","Item","title","link","icon","item","to","activeClassName","activeLink","Search","search","placeholder","Navigation","nav","container","ReactLogo","wrapperItems","posts","chats","music","users","setting","loginBlock","Account","onClick","other","NavigationContainer","this","props","React","Component","connect","withSuspense","ChildComp","fallback","ProfileUserContainer","lazy","PostsContainer","ChatsContainer","LoginContainer","UsersContainer","App","initializeApp","path","render","Spinner","compose","withRouter","promise","Promise","all","then","ReactDOM","document","getElementById","newPostText","avatar","name","like","profile","Date","getTime","filter","p","postId","addPostAC","updateStatusAC","getProfileTC","console","log","getStatusTC","updateStatusTC","SEND_MESSAGE","dialog","text","sendMessageAC","account","user","href","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","SET_IS_FETCHING","SET_IN_FOLLOWING","SET_PAGE_SIZE","totalUsersCount","currentPage","isFatching","followingInProgress","followed","totalCount","followAC","unFollowAC","setCurrentPage","setPageSize","setIsFetching","setFollowingInProgress","getUsersTC","page","followUnfollowFlow","apiMethod","actionCreators","follow","bind","unFollow"],"mappings":"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","file":"static/js/main.1aaf0cec.chunk.js","sourcesContent":["import axios from 'axios';\n\n//instance - экземпляр\nexport const instance = axios.create({\n   withCredentials: true,\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n   headers: {\n      \"API-KEY\": 'c776464e-9336-49f9-96f6-6e3857c87294'\n   }\n})  ","import { instance } from \"./api\";\n\n// type UserType = {\n//    name: string\n//    id: number\n//    photos: {\n//       small: null | string\n//       large: null | string\n//    },\n//    status: null | string\n//    followed: boolean\n// }\n\n// type UsersPropsType<T> = {\n//    items: T\n// }\n\nexport const usersAPI = {\n   getUsers(pageNumber: number, pageSize: number) {\n      return instance.get(`users?page=${pageNumber}&count=${pageSize}`)\n   },\n   postFollow(userId: number) {\n      return instance.post(`follow/${userId}`)\n   },\n\n   deleteFollow(userId: number) {\n      return instance.delete(`follow/${userId}`)\n   }\n}\n\nexport const profileAPI = {\n   getProfile(userId: number) {\n      return instance.get(`profile/${userId}`)\n   },\n   getStatus(userId: number) {\n      return instance.get(`profile/status/${userId}`)\n   },\n   updateStatus(status: string) {\n      return instance.put(`profile/status`, { status })\n   }\n}\n\nexport const authAPI = {\n   me() {\n      return instance.get('auth/me')\n   },\n   login(email: string, password: string, rememberMe: boolean) {\n      return instance.post('auth/login', { email, password, rememberMe})\n   },\n   loginout() {\n      return instance.delete('auth/login')\n   },\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2AsUs\",\"container\":\"Navigation_container__28f2r\",\"wrapper\":\"Navigation_wrapper__210y3\",\"logo\":\"Navigation_logo__QwHBD\",\"wrapperItems\":\"Navigation_wrapperItems__2T59o\",\"loginBlock\":\"Navigation_loginBlock__1ql5g\"};","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/usersApi\";\nimport { AppActionType, AppThunkType } from \"./redux-store\";\n\nexport type AuthType = {\n   id: null | number\n   email: null | string\n   login: null | string\n   isAuth: boolean\n}\n\nexport type AuthActionsTypes = ReturnType<typeof setAuthUserDataAC>\n\nconst intilitionState: AuthType = {\n   id: null,\n   email: null,\n   login: null,\n   isAuth: false,\n}\n\nexport const authReducer = (state = intilitionState, action: AppActionType): AuthType => {\n\n   switch (action.type) {\n      case 'AUTH/SET_USER_DATA':\n         return {\n            ...state,\n            ...action.payload,\n         }\n\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const setAuthUserDataAC = (\n   id: null | number,\n   email: null | string,\n   login: null | string,\n   isAuth: boolean) => ({ type: 'AUTH/SET_USER_DATA', payload: { id, email, login, isAuth } } as const)\n\n//ThUNK\nexport const getAuthUserDataTC = (): AppThunkType => async (dispatch) => {\n   const response = await authAPI.me()\n\n   if (response.data.resultCode === 0) {\n      let { email, id, login } = response.data.data\n      dispatch(setAuthUserDataAC(id, email, login, true))\n   }\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch) => {\n   const response = await authAPI.login(email, password, rememberMe)\n   if (response.data.resultCode === 0) {\n      dispatch(getAuthUserDataTC());\n   } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n      dispatch(stopSubmit('login', { _error: message }))\n   }\n}\n\nexport const loginoutTC = (): AppThunkType => async (dispatch) => {\n   const response = await authAPI.loginout()\n   if (response.data.resultCode === 0) {\n      dispatch(setAuthUserDataAC(null, null, null, false));\n   }\n}","import { getAuthUserDataTC } from \"./auth-reducer\";\nimport { AppThunkType } from \"./redux-store\";\n\nexport type AppType = {\n   initialized: boolean\n}\n\nexport type AppActionsTypes = ReturnType<typeof initializeAppAC>\n\nconst intilitionState: AppType = {\n   initialized: false\n}\n\nexport const appReducer = (state = intilitionState, action: AppActionsTypes): AppType => {\n\n   switch (action.type) {\n      case 'APP/INITIALIZED_SUCCSES':\n         return {\n            ...state,\n            initialized: true,\n         }\n\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const initializeAppAC = () => ({ type: 'APP/INITIALIZED_SUCCSES' } as const)\n\n//ThUNK\nexport const initializeApp = (): AppThunkType => (dispatch) => {\n   let promise = dispatch(getAuthUserDataTC())\n\n   Promise.all([promise])\n      .then(() => {\n         dispatch(initializeAppAC())\n      })\n\n}\n\n\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport {chatsReducer, ChatActionsTypes } from \"./chats-reducer\";\nimport { profileReducer, ProfileActionsTypes } from \"./profile-reducer\";\nimport {usersReducer} from \"./users-reducer\";\n// import sidebarReducer from \"./sidebar-reducer\";\nimport { authReducer, AuthActionsTypes } from './auth-reducer';\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport { AppActionsTypes, appReducer } from \"./app-reducer\";\n\n\nconst state = combineReducers({\n   postsPage: profileReducer,\n   chatsPage: chatsReducer,\n   usersPage: usersReducer,\n   profilePage: profileReducer,\n   auth: authReducer,\n   form: formReducer,\n   app: appReducer,\n   // sidebar: sidebarReducer\n});\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(state, composeEnhancers(applyMiddleware(thunk)));\n\nconst store = createStore(state, applyMiddleware(thunk));\n\nexport type AppStateType = ReturnType<typeof state>\nexport type AppDispatchType = typeof store.dispatch;\nexport type AppActionType = AuthActionsTypes | ProfileActionsTypes | ChatActionsTypes\n   | AppActionsTypes\nexport type AppThunkType<ReturnType = void> = ThunkAction<\n   ReturnType,\n   AppStateType,\n   unknown,\n   AppActionType\n>\n\nexport default store;\ndeclare const window: Window &\n   typeof globalThis & {\n      store: any\n   }\n//@ts-ignore\nwindow.__store__ = store;","export default __webpack_public_path__ + \"static/media/footer_logo.bc41ad14.png\";","import React from \"react\";\nimport s from './Footer.module.scss'\nimport logo from './footer_logo.png'\nexport const Footer = () => {\n   return <div className={s.footer}>\n      <div className={s.wrapper}>\n         <img src={logo} alt='logo' />\n         <div className={s.navigation}>Navigation</div>\n         <div className={s.access}>Fast access</div>\n         <div className={s.language}>Language</div>\n      </div>\n   </div>\n}","export default __webpack_public_path__ + \"static/media/Logo.f7bd9b2f.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Item.module.scss\";\n\ntype ItemPropsType = {\n    title: string\n    link: string\n    icon: string\n}\n\nfunction Item({title, link, icon}: ItemPropsType) {\n    return (\n        <div className={s.item}>\n            <NavLink to={link} activeClassName={s.activeLink}>\n                <img src={icon} alt='icon'/>\n                <h3>{title}</h3>\n            </NavLink>\n        </div>\n    );\n}\n\nexport default Item; ","import React from \"react\";\nimport s from './Search.module.scss';\n\nconst Search = () => {\n    return (\n        <div className={s.search}>\n            <input type='text' placeholder='Search'/>\n        </div>\n    );\n}\n\nexport default Search;","export default __webpack_public_path__ + \"static/media/chats.c7ca806c.svg\";","export default __webpack_public_path__ + \"static/media/posts.bc0b2980.svg\";","export default __webpack_public_path__ + \"static/media/music.c6da5b64.svg\";","export default __webpack_public_path__ + \"static/media/setting.afdffdf9.svg\";","export default __webpack_public_path__ + \"static/media/users.e9db7247.svg\";","export default __webpack_public_path__ + \"static/media/other.6c6d6a59.svg\";","import React from 'react';\nimport ReactLogo from './icons/Logo.png'\n\n//import components\nimport Item from \"./item/Item\";\nimport Search from \"./search/Search\";\n\n//import css\nimport s from './Navigation.module.scss';\nimport chats from './item/icons/chats.svg';\nimport posts from './item/icons/posts.svg';\nimport music from './item/icons/music.svg';\nimport setting from './item/icons/setting.svg';\nimport users from './item/icons/users.svg';\nimport other from './item/icons/other.svg';\nimport Account from '../Login/Account/Account';\nimport { AuthType } from '../../redux/auth-reducer';\nimport { NavLink } from 'react-router-dom';\n\ntype NavigationPropsType = {\n    loginoutTC: () => void\n    auth: AuthType\n}\n\nfunction Navigation({ loginoutTC, ...props }: NavigationPropsType) {\n    const { email, login, isAuth } = props.auth\n    return (\n        <nav className={s.nav}>\n\n            <div className={s.container}>\n                <div className={s.wrapper}>\n                    <img className={s.logo} src={ReactLogo} alt='logo' />\n                    <div className={s.container}>\n                        <div className={s.wrapperItems}>\n                            <Item title={'Posts'} link={'../../Posts/Posts.tsx'} icon={posts} />\n                            <Item title={'Chats'} link={'../../Chats/Chats.tsx'} icon={chats} />\n                            <Item title={'news'} link={'../../News/News.tsx'} icon={music} />\n                            <Item title={'users'} link={'../../Users/Users.tsx'} icon={users} />\n                            <Item title={'setting'} link={'../../Setting/Setting.tsx'} icon={setting} />\n                        </div>\n                        <Search />\n                        <div className={s.loginBlock}>\n                            {isAuth ? <div>\n                                <Account email={email} login={login} />\n                                <button onClick={loginoutTC}>Log out</button>\n                            </div> :\n                                <div className={s.loginBlock}>\n                                    <NavLink to=\"/login\">\n                                        <h1>Login</h1>\n                                    </NavLink>\n                                </div>}\n                        </div>\n\n                    </div>\n                    <Item title={'other'} link={'../../Other/Other.tsx'} icon={other} />\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navigation;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AuthType, getAuthUserDataTC, loginoutTC } from '../../redux/auth-reducer';\nimport { AppStateType } from \"../../redux/redux-store\";\nimport Navigation from './Navigation';\n\ntype NavigationContainerPropsType = {\n   getAuthUserDataTC: (\n      id: null | number,\n      email: null | string,\n      login: null | string) => void\n   loginoutTC: () => void\n}\n\nclass NavigationContainer extends React.Component<NavigationContainerPropsType & mapStateToPropsType>{\n   componentDidMount() {\n      this.props.getAuthUserDataTC(this.props.auth.id, this.props.auth.email, this.props.auth.email)\n   }\n   render() {\n      return <Navigation {...this.props} />\n   }\n}\n\ntype mapStateToPropsType = {\n   auth: AuthType\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n   return {\n      auth: state.auth\n   }\n}\n\nexport default connect(mapStateToProps, { getAuthUserDataTC, loginoutTC })(NavigationContainer)\n","import { ComponentType, Suspense } from 'react';\n\nexport function withSuspense<T>(ChildComp: ComponentType<T>) {\n  return (props: any) => {\n    return (\n      <Suspense fallback={<div>...Loading</div>}>\n        <ChildComp {...props} />\n      </Suspense>\n    );\n  };\n}\n","import React, { Suspense } from 'react';\nimport { Route } from 'react-router-dom';\n\n//import components\n\nimport { Footer } from '../Footer/Footer';\n\nimport NavigationContainer from '../Navigation/NavigationContainer';\n\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from '../../redux/app-reducer';\nimport { AppStateType } from '../../redux/redux-store';\nimport { Spinner } from '../common/Spinner/Spinner';\nimport { withSuspense } from '../../hoc/withSuspense';\n\n//lazy import\n\nconst ProfileUserContainer = React.lazy(\n  () => import('../Posts/Sidebar/ProfileUser/ProfileUserContainer')\n);\nconst PostsContainer = React.lazy(() => import('../Posts/PostsContainer'));\nconst ChatsContainer = React.lazy(() => import('../Chats/ChatsContainer'));\nconst LoginContainer = React.lazy(() => import('../Login/LoginContainer'));\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\n\ninterface AppPropsType extends React.Component {\n  initializeApp: () => void;\n}\ntype mapStateToPropsType = {\n  initialized: boolean;\n};\n\nclass App extends React.Component<AppPropsType & mapStateToPropsType, {}> {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Spinner />;\n    }\n\n    return (\n      <div>\n        <NavigationContainer />\n        <Route\n          path={'/profile/:userId?'}\n          render={() => {\n            return (\n              <Suspense fallback={<div>...Loading</div>}>\n                <ProfileUserContainer />\n              </Suspense>\n            );\n          }}\n        />\n        <Route path={'/posts'} render={withSuspense(PostsContainer)} />\n        <Route path={'/chats'} render={withSuspense(ChatsContainer)} />\n        {/* <Route path={'/news'} render={() => <News />} /> */}\n        <Route path={'/users'} render={withSuspense(UsersContainer)} />\n        <Route path={'/login'} render={withSuspense(LoginContainer)} />\n        {/* <Route path={'/setting'} render={() => <Setting />} />\n            <Route path={'/other'} render={() => <Other />} /> */}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    initialized: state.app.initialized,\n  };\n};\n\nexport default compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","import React from 'react';\nimport './index.css';\nimport store from './redux/redux-store';\nimport App from './components/App/App';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n// const renderEntireTree = (state: AppStateType) => {\n\nReactDOM.render(<BrowserRouter>\n    <Provider store={store}>\n        <App />\n    </Provider>\n</BrowserRouter>,\n    document.getElementById('root')\n)\n// }\n\n// renderEntireTree(store.getState());\n\n// store.subscribe(() => {\n//     let state = store.getState()\n//     renderEntireTree(state);\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"wrapper\":\"Footer_wrapper__35wdE\",\"navigation\":\"Footer_navigation__3miRx\",\"access\":\"Footer_access__3Hkl2\",\"language\":\"Footer_language__1GRk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Acount_account__2SDlZ\",\"wrapper\":\"Acount_wrapper__On4Hy\",\"title\":\"Acount_title__1Dz0K\",\"user\":\"Acount_user__ycv2p\"};","import { profileAPI } from '../api/usersApi';\nimport { AppActionType, AppThunkType } from \"./redux-store\";\n\nexport type PostType = {\n   id: number\n   messages: string\n   avatar: string\n   name: string\n   like: number\n}\n\nexport type ProfileType = {\n   aboutMe: string\n   contacts: {\n      facebook: string\n      website: null | string\n      vk: string\n      twitter: string\n      instagram: string\n      youtube: null | string\n      github: string\n      mainLink: null | string\n   },\n   lookingForAJob: boolean\n   lookingForAJobDescription: string,\n   fullName: string,\n   userId: number,\n   photos: {\n      small: string,\n      large: string\n   }\n}\n\nexport type PostsPageType = {\n   newPostText?: string\n   posts: Array<PostType>\n   profile: null | ProfileType\n   status: string\n}\n\nexport type ProfileActionsTypes = ReturnType<typeof addPostAC>\n   | ReturnType<typeof setUsersProfileAC>\n   | ReturnType<typeof setStatusAC>\n   | ReturnType<typeof updateStatusAC>\n   | ReturnType<typeof removePostAC>\n\n\nconst intilitionState: PostsPageType = {\n   newPostText: '',\n   posts: [\n      {\n         id: 1, messages: 'care if Harry lost his place on the House Quidditch',\n         avatar: 'https://avatars.mds.yandex.net/get-zen_doc/1888987/pub_5d2c7ff331878200ad93db8d_5d2c8196c31e4900aebf535d/scale_1200',\n         name: 'Petr', like: 10\n      },\n      {\n         id: 2, messages: 'What did the Dursleys care if Harry lost his place on ',\n         avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQsilMFO40hHXJ8wnaDFPIfauqkGrWB5VVoVA&usqp=CAU',\n         name: 'Vova', like: 9\n      },\n      {\n         id: 3, messages: 'What did the Dursleys care if Huse Quidditch',\n         avatar: 'https://cdna.artstation.com/p/assets/images/images/022/619/308/large/dmitry-gaborak-aka-neverwintered-green-2-3-sm-ava.jpg?1576091791',\n         name: 'Anna', like: 20\n      }\n   ],\n   profile: null,\n   status: '---',\n}\n\nexport const profileReducer = (state = intilitionState, action: AppActionType): PostsPageType => {\n\n   switch (action.type) {\n      case 'PROFILE/ADD-POST':\n         return {\n            ...state,\n            posts: [...state.posts,\n            {\n               id: new Date().getTime(),\n               messages: action.newPostText,\n               avatar: 'https://i.pinimg.com/474x/25/73/2b/25732be3be38ec7a4e8a74b4d70cb2ad.jpg',\n               name: '1',\n               like: 0\n            }],\n         }\n      case 'PROFILE/REMOVE-POST':\n         return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\n      case 'PROFILE/SET_USERS_PROFILE':\n         return {\n            ...state, profile: action.profile\n         }\n      case 'PROFILE/SET_STATUS':\n         return {\n            ...state,\n            status: action.status\n         }\n      case 'PROFILE/UPDATE_STATUS':\n         return {\n            ...state, status: action.status\n         }\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const addPostAC = (newPostText: string) => ({ type: 'PROFILE/ADD-POST', newPostText } as const)\nexport const removePostAC = (postId: number) => ({ type: 'PROFILE/REMOVE-POST', postId } as const)\nexport const setUsersProfileAC = (profile: ProfileType | null) => ({ type: 'PROFILE/SET_USERS_PROFILE', profile } as const)\nexport const setStatusAC = (status: string) => ({ type: 'PROFILE/SET_STATUS', status } as const)\nexport const updateStatusAC = (status: string) => ({ type: 'PROFILE/UPDATE_STATUS', status } as const)\n\n//THUNK\nexport const getProfileTC = (userId: number): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.getProfile(userId)\n   dispatch(setUsersProfileAC(response.data));\n   console.log(response.data);\n}\n\nexport const getStatusTC = (userId: number): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.getStatus(userId)\n   dispatch(setStatusAC(response.data));\n   console.log(response.data);\n}\n\nexport const updateStatusTC = (status: string): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.updateStatus(status)\n   if (response.data.resultCode === 0) {\n      dispatch(updateStatusAC(status));\n   };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__1TSkd\",\"activeLink\":\"Item_activeLink__19S5z\"};","import React from 'react';\nimport './Spinner.css';\n\nexport function Spinner() {\n   return <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n   </div>\n}\n\n\n\n","import { AppActionType } from \"./redux-store\";\n\nconst SEND_MESSAGE = 'CHAT/SEND-MESSAGE';\n\nexport type ChatMessageType = {\n   id: number\n   message: string\n}\n\ntype DialogType = {\n   id: number\n   name: string\n   text: string\n}\n\nexport type ChatsPageType = {\n   chats: Array<ChatMessageType>\n   dialog: Array<DialogType>\n}\n\nexport type ChatActionsTypes = ReturnType<typeof sendMessageAC>\n\nconst intilitionState: ChatsPageType = {\n   chats: [\n      { id: 1, message: 'Hi' },\n      { id: 2, message: 'How are you?' },\n      { id: 3, message: 'YO' },\n      { id: 4, message: 'YO' }\n   ],\n   dialog: [\n      { id: 1, name: 'Darlene Black', text: 'Hey, how is your project?' },\n      { id: 2, name: 'Theresa Stewar', text: 'Hi, Dmitry! I have a work for you. We?' },\n      { id: 3, name: 'Brandon Wilso', text: 'I am Russian and I am learning Engl' },\n      { id: 4, name: 'Kyle Fisher', text: 'So, It’s up to you!' },\n      { id: 5, name: 'Audrey Alexander', text: 'When you got it?' },\n      { id: 6, name: 'Design Conference', text: 'When you got it?' }\n   ],\n}\n\nexport const chatsReducer = (state = intilitionState, action: AppActionType): ChatsPageType => {\n   switch (action.type) {\n      case SEND_MESSAGE:\n         return {\n            ...state,\n            chats: [...state.chats, { id: 6, message: action.message }],\n         }\n\n      default:\n         return state\n   }\n}\n\nexport const sendMessageAC = (message: string) => ({ type: SEND_MESSAGE, message } as const)\n","import React from 'react';\nimport s from './Acount.module.scss';\n\ntype AccountPropsType = {\n    email: null | string\n    login: null | string\n}\n\nfunction Account({ email, login }: AccountPropsType) {\n    return (\n        <div className={s.account}>\n            <a className={s.user} href='#1'>\n                <img src='https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg' alt='userPhoto' />\n            </a>\n            <div className={s.wrapper}>\n                <div className={s.title}>{login}</div>\n                <div>you</div>\n                <div>{email}</div>\n                <div>+32</div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Account;","import { UsersType } from '../redux/users-reducer';\n\nexport const updateObjectInArray = (items: UsersType[], itemId: number, objPropName: 'id', newObjProps: {followed: boolean}) => {\n  return items.map(u => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObjProps }\n    }\n    return u;\n  })\n}","import { Dispatch } from \"redux\";\nimport { usersAPI } from '../api/usersApi';\nimport { updateObjectInArray } from \"../utils/object-helper\";\n\nconst FOLLOW = 'USERS/UPDATE_STATUS';\nconst UNFOLLOW = 'USERS/UNFOLLOW';\nconst SET_USERS = 'USERS/SET_USERS';\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'USERS/SET_USERS_TOTAL_COUNT';\nconst SET_IS_FETCHING = 'USERS/SET_IS_FETCHING';\nconst SET_IN_FOLLOWING = 'USERS/SET_IN_FOLLOWING';\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\n\nexport type UsersType = {\n   id: number\n   name: string\n   photos: {\n      small: string\n      large: string\n   }\n   followed: boolean\n   location?: {\n      country: string\n      city: string\n   }\n}\n\nexport type UsersPageType = {\n   users: Array<UsersType>\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFatching: boolean\n   followingInProgress: number[]\n}\n\nexport type ActionsTypes = ReturnType<typeof followAC>\n   | ReturnType<typeof unFollowAC>\n   | ReturnType<typeof setUsers>\n   | ReturnType<typeof setCurrentPage>\n   | ReturnType<typeof setUsersTotalCount>\n   | ReturnType<typeof setIsFetching>\n   | ReturnType<typeof setFollowingInProgress>\n   |ReturnType<typeof setPageSize>\n\n\nconst intilitionState: UsersPageType = {\n   users: [],\n   pageSize: 5,\n   totalUsersCount: 0,\n   currentPage: 1,\n   isFatching: false,\n   followingInProgress: [],\n}\n\nexport const usersReducer = (state: UsersPageType = intilitionState, action: ActionsTypes): UsersPageType => {\n   switch (action.type) {\n      case FOLLOW:\n         return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n         }\n      case UNFOLLOW:\n         return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n         }\n      case SET_USERS:\n         return {\n            ...state,\n            users: action.users\n         }\n      case SET_CURRENT_PAGE:\n         return {\n            ...state, currentPage: action.currentPage\n         }\n         case SET_PAGE_SIZE:\n            return {...state, pageSize: action.pageSize}\n      case SET_USERS_TOTAL_COUNT:\n         return {\n            ...state, totalUsersCount: action.totalCount\n         }\n      case SET_IS_FETCHING:\n         return {\n            ...state, isFatching: action.isFatching\n         }\n      case SET_IN_FOLLOWING:\n         return {\n            ...state,\n            followingInProgress: action.isFatching\n               ? [...state.followingInProgress, action.userId]\n               : state.followingInProgress.filter(id => id !== action.userId)\n         }\n      default:\n         return state;\n   }\n}\n\nexport const followAC = (userId: number) => ({ type: FOLLOW, userId } as const)\nexport const unFollowAC = (userId: number) => ({ type: UNFOLLOW, userId } as const)\nexport const setUsers = (users: Array<UsersType>) => ({ type: SET_USERS, users } as const)\nexport const setCurrentPage = (currentPage: number) => ({ type: SET_CURRENT_PAGE, currentPage } as const)\nexport const setPageSize = (pageSize: number) => ({ type: SET_PAGE_SIZE, pageSize } as const)\nexport const setUsersTotalCount = (totalCount: number) => ({ type: SET_USERS_TOTAL_COUNT, totalCount } as const)\nexport const setIsFetching = (isFatching: boolean) => ({ type: SET_IS_FETCHING, isFatching } as const)\nexport const setFollowingInProgress = (isFatching: boolean, userId: number) => ({ type: SET_IN_FOLLOWING, isFatching, userId } as const)\n\n//THUNK\nexport const getUsersTC = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n   dispatch(setIsFetching(true));\n   dispatch(setCurrentPage(page));\n   dispatch(setPageSize(pageSize))\n   const data = await usersAPI.getUsers(page, pageSize)\n   dispatch(setIsFetching(false))\n   dispatch(setUsers(data.data.items))\n   dispatch(setUsersTotalCount(data.data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreators: any) => {\n   dispatch(setFollowingInProgress(true, userId))\n   const response = await apiMethod(userId)\n   if (response.data.resultCode === 0) {\n      dispatch(actionCreators(userId))\n   }\n   dispatch(setFollowingInProgress(false, userId))\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n   followUnfollowFlow(dispatch, userId, usersAPI.postFollow.bind(userId), followAC)\n}\n\nexport const unFollow = (userId: number) => async (dispatch: Dispatch) => {\n   followUnfollowFlow(dispatch, userId, usersAPI.deleteFollow.bind(userId), unFollowAC)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__hegbS\"};"],"sourceRoot":""}