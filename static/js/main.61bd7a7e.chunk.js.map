{"version":3,"sources":["components/Login/Login.module.scss","components/Navigation/item/Item.module.scss","components/common/FormControls/FormControls.module.scss","components/Posts/Filter/Filter.module.scss","components/Chats/Chats.module.css","components/Posts/Sidebar/Sidebar.module.css","components/Users/Users.module.scss","components/Navigation/search/Search.module.scss","components/common/Paginator/Paginator.module.scss","redux/chats-reducer.ts","api/api.ts","api/usersApi.ts","redux/profile-reducer.ts","utils/object-helper.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Chats/ChatMessage/ChatMessage.tsx","components/Chats/DialogsItem/DialogItem.tsx","utils/validation/validation.ts","components/common/FormControls/FormControls.tsx","components/Chats/Chats.tsx","hoc/WithAuthRedirect.tsx","components/Chats/ChatsContainer.tsx","components/Posts/Filter/Filter.tsx","components/Posts/Sidebar/Button/Button.tsx","components/Posts/Sidebar/MyGroups/MyGroups.tsx","img/profile/ProfileImg.jpg","img/icons/user.png","components/common/Spinner/Spinner.tsx","components/Posts/Sidebar/ProfileUser/ProfileUser.tsx","components/Posts/Sidebar/ProfileUser/ProfileUserContainer.tsx","components/Posts/Sidebar/Sidebar.tsx","components/Posts/MyPost/ProfileInfo/ProfileInfo.tsx","components/Posts/MyPost/NewMess/NewMess.tsx","components/Posts/MyPost/MyPost.tsx","components/Posts/NewPost/icons/send.svg","components/Posts/NewPost/NewPost.tsx","components/Posts/NewPost/NewPostContainer.tsx","components/Posts/Posts.tsx","components/Posts/PostsContainer.tsx","components/common/Paginator/Paginator.tsx","components/common/User/User.tsx","components/Users/Users.tsx","redux/users-selects.ts","components/Users/UsersContainer.tsx","components/Footer/footer_logo.png","components/Footer/Footer.tsx","components/Login/Account/Account.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","components/Navigation/icons/Logo.png","components/Navigation/item/Item.tsx","components/Navigation/search/Search.tsx","components/Navigation/item/icons/chats.svg","components/Navigation/item/icons/posts.svg","components/Navigation/item/icons/music.svg","components/Navigation/item/icons/setting.svg","components/Navigation/item/icons/users.svg","components/Navigation/item/icons/other.svg","components/Navigation/Navigation.tsx","components/Navigation/NavigationContainer.tsx","components/App/App.tsx","index.tsx","components/Navigation/Navigation.module.scss","components/Container.module.scss","components/Posts/Sidebar/ProfileUser/ProfileUser.module.scss","components/common/User/User.module.scss","components/Footer/Footer.module.scss","components/Posts/NewPost/NewPost.module.scss","components/Login/Account/Acount.module.scss","components/Posts/Sidebar/MyGroups/MyGroups.module.css","components/Posts/MyPost/ProfileInfo/ProfileInfo.module.scss","components/Posts/Posts.module.scss","components/Posts/Sidebar/Button/Button.module.css","components/Posts/MyPost/NewMess/NewMess.module.scss"],"names":["module","exports","SEND_MESSAGE","intilitionState","chats","id","message","dialog","name","text","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","pageNumber","pageSize","get","postFollow","userId","post","deleteFollow","delete","profileAPI","status","put","authAPI","email","password","rememberMe","newPostText","posts","messages","avatar","like","profile","profileReducer","state","action","type","Date","getTime","filter","p","postId","updateStatusAC","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","SET_IS_FETCHING","SET_IN_FOLLOWING","SET_PAGE_SIZE","users","totalUsersCount","currentPage","isFatching","followingInProgress","followAC","unFollowAC","setCurrentPage","setPageSize","setIsFetching","setFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreators","a","data","resultCode","login","isAuth","setAuthUserDataAC","payload","getAuthUserDataTC","response","loginoutTC","initialized","combineReducers","postsPage","chatsPage","usersPage","followed","totalCount","profilePage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunk","window","__store__","ChatMessage","DialogsItem","props","path","className","s","to","activeClassName","active","prof","src","alt","subtitle","subtext","required","value","maxLengthCreate","maxLength","length","FormControls","meta","error","touched","children","hasError","Textarea","input","restProps","Input","FormError","createField","placeholder","component","validate","Field","maxLength50","AddNewMessagesRedux","reduxForm","writeMessages","onSubmit","handleSubmit","Chats","sendMessageAC","dialogElements","c","chatMessageElement","m","container","dialogs","visitors","title","visitor","header","values","mapStateToPropsForRiderect","withAuthRedirect","ChildComp","connect","ChatsContainer","this","Component","compose","withRouter","Filter","style","Button","buttonCon","button","MyGroups","myGroups","head","body","Spinner","ProfileUser","updateStatus","useState","editMode","setEditMode","newStatus","setNewStatus","useEffect","console","log","bg","profileBg","photo","photos","large","profilePhoto","fullName","onDoubleClick","descr","onChange","e","currentTarget","onBlur","autoFocus","ProfileUserContainer","profileId","match","params","getProfileTC","getStatusTC","prevProps","prevState","setState","updateStatusTC","React","Sidebar","sidebar","ProfileInfo","profileInfo","userImg","userName","NewMess","newMess","MyPost","_rect","_path","_path2","_defs","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSend","_ref","svgRef","titleId","width","height","viewBox","fill","xmlns","ref","rx","d","stroke","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","gradientUnits","stopColor","offset","ForwardRef","maxLength10","NewPostMessRedux","btn","NewPostContainer","addPostAC","newPost_head","Posts","memo","postElement","newPost","newPost_body","PostContainer","Paginator","onPageChange","portionSize","onPageSizeChange","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","lists","arrow","onClick","page","index","selectedPage","User","user","unFollow","follow","wrapper","small","photoUser","description","line","disabled","some","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFatching","getFollowingInProgress","publishedUsersSelector","createSelector","UsersContainer","getUsersTC","bind","Footer","footer","logo","navigation","access","language","Account","account","href","LoginReduxForm","htmlFor","loginTC","stopSubmit","_error","loginBlock","formData","LoginContainer","Item","link","icon","item","activeLink","Search","search","Navigation","nav","ReactLogo","wrapperItems","music","setting","other","NavigationContainer","App","initializeApp","render","PostsContainer","promise","Promise","all","then","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.61bd7a7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__2PPB2\",\"error\":\"Login_error__6SziI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__1TSkd\",\"activeLink\":\"Item_activeLink__19S5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error___hLaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1vxr1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Chats_dialogs__102i9\",\"visitors\":\"Chats_visitors__rKPeW\",\"title\":\"Chats_title__3nLll\",\"visitor\":\"Chats_visitor__5e6Ur\",\"dialog\":\"Chats_dialog__1kTv-\",\"prof\":\"Chats_prof__2oRJ2\",\"chats\":\"Chats_chats__3FOMc\",\"subtitle\":\"Chats_subtitle__2LEZs\",\"active\":\"Chats_active__1bDLe\",\"subtext\":\"Chats_subtext__2iFhQ\",\"header\":\"Chats_header__3cg_D\",\"writeMessages\":\"Chats_writeMessages__1HCFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3hMkV\",\"profile\":\"Sidebar_profile__dA_wC\",\"bg\":\"Sidebar_bg__3fWEf\",\"photo\":\"Sidebar_photo__25bFm\",\"title\":\"Sidebar_title__fMYll\",\"descr\":\"Sidebar_descr__3Sk-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3CRqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__hegbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"Paginator_lists__1ADFg\",\"arrow\":\"Paginator_arrow__mGU_b\",\"selectedPage\":\"Paginator_selectedPage__1y9hK\",\"pageSize\":\"Paginator_pageSize__3A3zC\",\"active\":\"Paginator_active__lQDaF\"};","import { AppActionType } from \"./redux-store\";\n\nconst SEND_MESSAGE = 'CHAT/SEND-MESSAGE';\n\nexport type ChatMessageType = {\n   id: number\n   message: string\n}\n\ntype DialogType = {\n   id: number\n   name: string\n   text: string\n}\n\nexport type ChatsPageType = {\n   chats: Array<ChatMessageType>\n   dialog: Array<DialogType>\n}\n\nexport type ChatActionsTypes = ReturnType<typeof sendMessageAC>\n\nconst intilitionState: ChatsPageType = {\n   chats: [\n      { id: 1, message: 'Hi' },\n      { id: 2, message: 'How are you?' },\n      { id: 3, message: 'YO' },\n      { id: 4, message: 'YO' }\n   ],\n   dialog: [\n      { id: 1, name: 'Darlene Black', text: 'Hey, how is your project?' },\n      { id: 2, name: 'Theresa Stewar', text: 'Hi, Dmitry! I have a work for you. We?' },\n      { id: 3, name: 'Brandon Wilso', text: 'I am Russian and I am learning Engl' },\n      { id: 4, name: 'Kyle Fisher', text: 'So, It’s up to you!' },\n      { id: 5, name: 'Audrey Alexander', text: 'When you got it?' },\n      { id: 6, name: 'Design Conference', text: 'When you got it?' }\n   ],\n}\n\nexport const chatsReducer = (state = intilitionState, action: AppActionType): ChatsPageType => {\n   switch (action.type) {\n      case SEND_MESSAGE:\n         return {\n            ...state,\n            chats: [...state.chats, { id: 6, message: action.message }],\n         }\n\n      default:\n         return state\n   }\n}\n\nexport const sendMessageAC = (message: string) => ({ type: SEND_MESSAGE, message } as const)\n","import axios from 'axios';\n\n//instance - экземпляр\nexport const instance = axios.create({\n   withCredentials: true,\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n   headers: {\n      \"API-KEY\": 'c776464e-9336-49f9-96f6-6e3857c87294'\n   }\n})  ","import { instance } from \"./api\";\n\n// type UserType = {\n//    name: string\n//    id: number\n//    photos: {\n//       small: null | string\n//       large: null | string\n//    },\n//    status: null | string\n//    followed: boolean\n// }\n\n// type UsersPropsType<T> = {\n//    items: T\n// }\n\nexport const usersAPI = {\n   getUsers(pageNumber: number, pageSize: number) {\n      return instance.get(`users?page=${pageNumber}&count=${pageSize}`)\n   },\n   postFollow(userId: number) {\n      return instance.post(`follow/${userId}`)\n   },\n\n   deleteFollow(userId: number) {\n      return instance.delete(`follow/${userId}`)\n   }\n}\n\nexport const profileAPI = {\n   getProfile(userId: number) {\n      return instance.get(`profile/${userId}`)\n   },\n   getStatus(userId: number) {\n      return instance.get(`profile/status/${userId}`)\n   },\n   updateStatus(status: string) {\n      return instance.put(`profile/status`, { status })\n   }\n}\n\nexport const authAPI = {\n   me() {\n      return instance.get('auth/me')\n   },\n   login(email: string, password: string, rememberMe: boolean) {\n      return instance.post('auth/login', { email, password, rememberMe})\n   },\n   loginout() {\n      return instance.delete('auth/login')\n   },\n}","import { profileAPI } from '../api/usersApi';\nimport { AppActionType, AppThunkType } from \"./redux-store\";\n\nexport type PostType = {\n   id: number\n   messages: string\n   avatar: string\n   name: string\n   like: number\n}\n\nexport type ProfileType = {\n   aboutMe: string\n   contacts: {\n      facebook: string\n      website: null | string\n      vk: string\n      twitter: string\n      instagram: string\n      youtube: null | string\n      github: string\n      mainLink: null | string\n   },\n   lookingForAJob: boolean\n   lookingForAJobDescription: string,\n   fullName: string,\n   userId: number,\n   photos: {\n      small: string,\n      large: string\n   }\n}\n\nexport type PostsPageType = {\n   newPostText?: string\n   posts: Array<PostType>\n   profile: null | ProfileType\n   status: string\n}\n\nexport type ProfileActionsTypes = ReturnType<typeof addPostAC>\n   | ReturnType<typeof setUsersProfileAC>\n   | ReturnType<typeof setStatusAC>\n   | ReturnType<typeof updateStatusAC>\n   | ReturnType<typeof removePostAC>\n\n\nconst intilitionState: PostsPageType = {\n   newPostText: '',\n   posts: [\n      {\n         id: 1, messages: 'care if Harry lost his place on the House Quidditch',\n         avatar: 'https://avatars.mds.yandex.net/get-zen_doc/1888987/pub_5d2c7ff331878200ad93db8d_5d2c8196c31e4900aebf535d/scale_1200',\n         name: 'Petr', like: 10\n      },\n      {\n         id: 2, messages: 'What did the Dursleys care if Harry lost his place on ',\n         avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQsilMFO40hHXJ8wnaDFPIfauqkGrWB5VVoVA&usqp=CAU',\n         name: 'Vova', like: 9\n      },\n      {\n         id: 3, messages: 'What did the Dursleys care if Huse Quidditch',\n         avatar: 'https://cdna.artstation.com/p/assets/images/images/022/619/308/large/dmitry-gaborak-aka-neverwintered-green-2-3-sm-ava.jpg?1576091791',\n         name: 'Anna', like: 20\n      }\n   ],\n   profile: null,\n   status: '---',\n}\n\nexport const profileReducer = (state = intilitionState, action: AppActionType): PostsPageType => {\n\n   switch (action.type) {\n      case 'PROFILE/ADD-POST':\n         return {\n            ...state,\n            posts: [...state.posts,\n            {\n               id: new Date().getTime(),\n               messages: action.newPostText,\n               avatar: 'https://i.pinimg.com/474x/25/73/2b/25732be3be38ec7a4e8a74b4d70cb2ad.jpg',\n               name: '1',\n               like: 0\n            }],\n         }\n      case 'PROFILE/REMOVE-POST':\n         return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\n      case 'PROFILE/SET_USERS_PROFILE':\n         return {\n            ...state, profile: action.profile\n         }\n      case 'PROFILE/SET_STATUS':\n         return {\n            ...state,\n            status: action.status\n         }\n      case 'PROFILE/UPDATE_STATUS':\n         return {\n            ...state, status: action.status\n         }\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const addPostAC = (newPostText: string) => ({ type: 'PROFILE/ADD-POST', newPostText } as const)\nexport const removePostAC = (postId: number) => ({ type: 'PROFILE/REMOVE-POST', postId } as const)\nexport const setUsersProfileAC = (profile: ProfileType | null) => ({ type: 'PROFILE/SET_USERS_PROFILE', profile } as const)\nexport const setStatusAC = (status: string) => ({ type: 'PROFILE/SET_STATUS', status } as const)\nexport const updateStatusAC = (status: string) => ({ type: 'PROFILE/UPDATE_STATUS', status } as const)\n\n//THUNK\nexport const getProfileTC = (userId: number): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.getProfile(userId)\n   dispatch(setUsersProfileAC(response.data));\n   console.log(response.data);\n}\n\nexport const getStatusTC = (userId: number): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.getStatus(userId)\n   dispatch(setStatusAC(response.data));\n   console.log(response.data);\n}\n\nexport const updateStatusTC = (status: string): AppThunkType => async (dispatch) => {\n   const response = await profileAPI.updateStatus(status)\n   if (response.data.resultCode === 0) {\n      dispatch(updateStatusAC(status));\n   };\n}","import { UsersType } from '../redux/users-reducer';\n\nexport const updateObjectInArray = (items: UsersType[], itemId: number, objPropName: 'id', newObjProps: {followed: boolean}) => {\n  return items.map(u => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObjProps }\n    }\n    return u;\n  })\n}","import { Dispatch } from \"redux\";\nimport { usersAPI } from '../api/usersApi';\nimport { updateObjectInArray } from \"../utils/object-helper\";\n\nconst FOLLOW = 'USERS/UPDATE_STATUS';\nconst UNFOLLOW = 'USERS/UNFOLLOW';\nconst SET_USERS = 'USERS/SET_USERS';\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\nconst SET_USERS_TOTAL_COUNT = 'USERS/SET_USERS_TOTAL_COUNT';\nconst SET_IS_FETCHING = 'USERS/SET_IS_FETCHING';\nconst SET_IN_FOLLOWING = 'USERS/SET_IN_FOLLOWING';\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE';\n\nexport type UsersType = {\n   id: number\n   name: string\n   photos: {\n      small: string\n      large: string\n   }\n   followed: boolean\n   location?: {\n      country: string\n      city: string\n   }\n}\n\nexport type UsersPageType = {\n   users: Array<UsersType>\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFatching: boolean\n   followingInProgress: number[]\n}\n\nexport type ActionsTypes = ReturnType<typeof followAC>\n   | ReturnType<typeof unFollowAC>\n   | ReturnType<typeof setUsers>\n   | ReturnType<typeof setCurrentPage>\n   | ReturnType<typeof setUsersTotalCount>\n   | ReturnType<typeof setIsFetching>\n   | ReturnType<typeof setFollowingInProgress>\n   |ReturnType<typeof setPageSize>\n\n\nconst intilitionState: UsersPageType = {\n   users: [],\n   pageSize: 5,\n   totalUsersCount: 0,\n   currentPage: 1,\n   isFatching: false,\n   followingInProgress: [],\n}\n\nexport const usersReducer = (state: UsersPageType = intilitionState, action: ActionsTypes): UsersPageType => {\n   switch (action.type) {\n      case FOLLOW:\n         return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n         }\n      case UNFOLLOW:\n         return {\n            ...state,\n            users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n         }\n      case SET_USERS:\n         return {\n            ...state,\n            users: action.users\n         }\n      case SET_CURRENT_PAGE:\n         return {\n            ...state, currentPage: action.currentPage\n         }\n         case SET_PAGE_SIZE:\n            return {...state, pageSize: action.pageSize}\n      case SET_USERS_TOTAL_COUNT:\n         return {\n            ...state, totalUsersCount: action.totalCount\n         }\n      case SET_IS_FETCHING:\n         return {\n            ...state, isFatching: action.isFatching\n         }\n      case SET_IN_FOLLOWING:\n         return {\n            ...state,\n            followingInProgress: action.isFatching\n               ? [...state.followingInProgress, action.userId]\n               : state.followingInProgress.filter(id => id !== action.userId)\n         }\n      default:\n         return state;\n   }\n}\n\nexport const followAC = (userId: number) => ({ type: FOLLOW, userId } as const)\nexport const unFollowAC = (userId: number) => ({ type: UNFOLLOW, userId } as const)\nexport const setUsers = (users: Array<UsersType>) => ({ type: SET_USERS, users } as const)\nexport const setCurrentPage = (currentPage: number) => ({ type: SET_CURRENT_PAGE, currentPage } as const)\nexport const setPageSize = (pageSize: number) => ({ type: SET_PAGE_SIZE, pageSize } as const)\nexport const setUsersTotalCount = (totalCount: number) => ({ type: SET_USERS_TOTAL_COUNT, totalCount } as const)\nexport const setIsFetching = (isFatching: boolean) => ({ type: SET_IS_FETCHING, isFatching } as const)\nexport const setFollowingInProgress = (isFatching: boolean, userId: number) => ({ type: SET_IN_FOLLOWING, isFatching, userId } as const)\n\n//THUNK\nexport const getUsersTC = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n   dispatch(setIsFetching(true));\n   dispatch(setCurrentPage(page));\n   dispatch(setPageSize(pageSize))\n   const data = await usersAPI.getUsers(page, pageSize)\n   dispatch(setIsFetching(false))\n   dispatch(setUsers(data.data.items))\n   dispatch(setUsersTotalCount(data.data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreators: any) => {\n   dispatch(setFollowingInProgress(true, userId))\n   const response = await apiMethod(userId)\n   if (response.data.resultCode === 0) {\n      dispatch(actionCreators(userId))\n   }\n   dispatch(setFollowingInProgress(false, userId))\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n   followUnfollowFlow(dispatch, userId, usersAPI.postFollow.bind(userId), followAC)\n}\n\nexport const unFollow = (userId: number) => async (dispatch: Dispatch) => {\n   followUnfollowFlow(dispatch, userId, usersAPI.deleteFollow.bind(userId), unFollowAC)\n}","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/usersApi\";\nimport { AppActionType, AppThunkType } from \"./redux-store\";\n\nexport type AuthType = {\n   id: null | number\n   email: null | string\n   login: null | string\n   isAuth: boolean\n}\n\nexport type AuthActionsTypes = ReturnType<typeof setAuthUserDataAC>\n\nconst intilitionState: AuthType = {\n   id: null,\n   email: null,\n   login: null,\n   isAuth: false,\n}\n\nexport const authReducer = (state = intilitionState, action: AppActionType): AuthType => {\n\n   switch (action.type) {\n      case 'AUTH/SET_USER_DATA':\n         return {\n            ...state,\n            ...action.payload,\n         }\n\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const setAuthUserDataAC = (\n   id: null | number,\n   email: null | string,\n   login: null | string,\n   isAuth: boolean) => ({ type: 'AUTH/SET_USER_DATA', payload: { id, email, login, isAuth } } as const)\n\n//ThUNK\nexport const getAuthUserDataTC = (): AppThunkType => async (dispatch) => {\n   const response = await authAPI.me()\n\n   if (response.data.resultCode === 0) {\n      let { email, id, login } = response.data.data\n      dispatch(setAuthUserDataAC(id, email, login, true))\n   }\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch) => {\n   const response = await authAPI.login(email, password, rememberMe)\n   if (response.data.resultCode === 0) {\n      dispatch(getAuthUserDataTC());\n   } else {\n      let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n      dispatch(stopSubmit('login', { _error: message }))\n   }\n}\n\nexport const loginoutTC = (): AppThunkType => async (dispatch) => {\n   const response = await authAPI.loginout()\n   if (response.data.resultCode === 0) {\n      dispatch(setAuthUserDataAC(null, null, null, false));\n   }\n}","import { getAuthUserDataTC } from \"./auth-reducer\";\nimport { AppThunkType } from \"./redux-store\";\n\nexport type AppType = {\n   initialized: boolean\n}\n\nexport type AppActionsTypes = ReturnType<typeof initializeAppAC>\n\nconst intilitionState: AppType = {\n   initialized: false\n}\n\nexport const appReducer = (state = intilitionState, action: AppActionsTypes): AppType => {\n\n   switch (action.type) {\n      case 'APP/INITIALIZED_SUCCSES':\n         return {\n            ...state,\n            initialized: true,\n         }\n\n      default: {\n         return state;\n      }\n   }\n}\n\nexport const initializeAppAC = () => ({ type: 'APP/INITIALIZED_SUCCSES' } as const)\n\n//ThUNK\nexport const initializeApp = (): AppThunkType => (dispatch) => {\n   let promise = dispatch(getAuthUserDataTC())\n\n   Promise.all([promise])\n      .then(() => {\n         dispatch(initializeAppAC())\n      })\n\n}\n\n\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport {chatsReducer, ChatActionsTypes } from \"./chats-reducer\";\nimport { profileReducer, ProfileActionsTypes } from \"./profile-reducer\";\nimport {usersReducer} from \"./users-reducer\";\n// import sidebarReducer from \"./sidebar-reducer\";\nimport { authReducer, AuthActionsTypes } from './auth-reducer';\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport { AppActionsTypes, appReducer } from \"./app-reducer\";\n\n\nconst state = combineReducers({\n   postsPage: profileReducer,\n   chatsPage: chatsReducer,\n   usersPage: usersReducer,\n   profilePage: profileReducer,\n   auth: authReducer,\n   form: formReducer,\n   app: appReducer,\n   // sidebar: sidebarReducer\n});\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(state, composeEnhancers(applyMiddleware(thunk)));\n\nconst store = createStore(state, applyMiddleware(thunk));\n\nexport type AppStateType = ReturnType<typeof state>\nexport type AppDispatchType = typeof store.dispatch;\nexport type AppActionType = AuthActionsTypes | ProfileActionsTypes | ChatActionsTypes\n   | AppActionsTypes\nexport type AppThunkType<ReturnType = void> = ThunkAction<\n   ReturnType,\n   AppStateType,\n   unknown,\n   AppActionType\n>\n\nexport default store;\ndeclare const window: Window &\n   typeof globalThis & {\n      store: any\n   }\n//@ts-ignore\nwindow.__store__ = store;","import React from \"react\";\nimport { ChatMessageType } from \"../../../redux/chats-reducer\";\n\nexport function ChatMessage({ message}: ChatMessageType) {\n    return <div>{message}</div>\n}","import React from \"react\";\nimport s from \"../Chats.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\n\ntype DialogsItemPropsType = {\n    name: string\n    id: number\n    text: string\n}\n\nexport function DialogsItem(props: DialogsItemPropsType) {\n    const { name, id, text } = props\n    let path = '/chats/' + id;\n    return <div className={s.dialog}>\n        <NavLink to={path} activeClassName={s.active} className={s.prof}>\n            <img src=\"https://static-s.aa-cdn.net/img/gp/20600007187994/ytM4AkndmSigMvuUChoY1JuV1VtjoBrbMm2E-B0f9q19lVJ633gm6_-Oexe1PPaHCG0=s300?v=1\" alt=\"ava\" />\n            <div className={s.subtitle}>{name}</div>\n            <p className={s.subtext}>{text}</p>\n        </NavLink>\n    </div>\n}\n\n\n\n\n\n","export const required = (value: any) => {\n   if (value) return undefined;\n   return 'Field is required';\n}\n\nexport const maxLengthCreate = (maxLength: number) => (value: any) => {\n   if (value && value.length > maxLength) return `Max length ${maxLength} symbels`;\n   return undefined;\n}","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport s from './FormControls.module.scss'\n\nconst FormControls = (props: any) => {\n   const { meta:{error, touched}, children } = props;\n   const hasError = error && touched\n   return (\n      <div className={hasError ? s.error : ''}>\n         {children}\n         {hasError && <span>{error}</span>}\n      </div>\n   );\n}\n\nexport const Textarea = (props: any) => {\n   const { input, ...restProps } = props;\n   return <FormControls {...props}><textarea {...input} {...restProps} /></FormControls>\n}\n\nexport const Input = (props: any) => {\n   const { input, meta, ...restProps } = props;\n   return <FormControls {...props}><input {...input} {...restProps} /></FormControls>\n}\n\nexport const FormError = (props: any) => {\n   return <FormControls {...props}><div {...props}>{props.error}</div></FormControls>\n}\n\nexport const createField = (name: string, placeholder: string | null, component = {}, validate: {}, props?: any, text='') => {\n   return <Field\n      name={name}\n      placeholder={placeholder}\n      component={component}\n      validate={validate}\n      {...props}\n      {...text}\n   />\n}","import React from 'react';\nimport { ChatsPageType } from '../../redux/store';\nimport { ChatMessage } from './ChatMessage/ChatMessage';\nimport { DialogsItem } from \"./DialogsItem/DialogItem\";\n//import css\nimport c from '../Container.module.scss';\nimport s from './Chats.module.css';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { ChatMessageType } from '../../redux/chats-reducer';\nimport { maxLengthCreate, required } from '../../utils/validation/validation';\nimport { Textarea } from '../common/FormControls/FormControls';\n\ntype ChatsPropsType = {\n    state: ChatsPageType\n    isAuth: boolean\n    sendMessageAC: (message: string) => void\n    onNewMessageChange: (body: any) => void\n}\n\nfunction Chats(props: ChatsPropsType) {\n    const { state, sendMessageAC } = props;\n\n    let dialogElements = state.dialog.map(c => <DialogsItem key={c.id} name={c.name} id={c.id} text={c.text} />)\n    let chatMessageElement = state.chats.map(m => <ChatMessage key={m.id} id={m.id} message={m.message} />)\n\n    let addNewMessage = (values: any) => {\n        sendMessageAC(values.message)\n    }\n\n    return (\n        <div className={c.container}>\n            <div className={s.dialogs}>\n                <div className={s.visitors}>\n                    <div className={s.title}>Chats</div>\n                    <div className={s.visitor}>\n                        {dialogElements}\n                    </div>\n                </div>\n                <div className={s.chats}>\n                    <div className={s.header}>Chat with Kyle Fisher</div>\n                    <div className={s.messages}>\n                        {chatMessageElement}\n                    </div>\n                    <AddNewMessagesRedux onSubmit={addNewMessage} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst maxLength50 = maxLengthCreate(50)\n\nconst AddNewMessages: React.FC<InjectedFormProps<ChatMessageType>> = (props) => {\n    return (\n        <form className={s.writeMessages} onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                name='message'\n                validate={[required, maxLength50]}\n                placeholder='Enter your message'>\n            </Field>\n            <button>Send</button>\n        </form>\n    )\n}\n\nconst AddNewMessagesRedux = reduxForm<ChatMessageType>({ form: 'dialogAddMessageForm' })(AddNewMessages)\nexport default Chats;","import React, {  ComponentType } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AppStateType } from \"../redux/redux-store\";\nimport { connect } from 'react-redux';\n\n\ntype MSTPType = {\n   isAuth: boolean\n}\n\nconst mapStateToPropsForRiderect = (state: AppStateType): MSTPType => {\n   return {\n      isAuth: state.auth.isAuth\n   }\n}\n\nexport function withAuthRedirect <T>(ChildComp: ComponentType<T>) {\n\n   const RedirectComponent = (props: MSTPType)=> {\n      const {isAuth, ...restProps} = props;\n      if (!isAuth) return <Redirect to='/login' />;\n      return <ChildComp {...restProps as T} />\n   }\n   let ConnectedRedirectComponent = connect(mapStateToPropsForRiderect)(RedirectComponent)\n   return ConnectedRedirectComponent;\n}\n   \n\n\n\n","import { sendMessageAC } from '../../redux/chats-reducer';\nimport Chats from './Chats';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { Component } from 'react';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\n\n\nclass ChatsContainer extends Component {\n    render() {\n        //@ts-ignore\n        return <Chats {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        state: state.chatsPage,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, { sendMessageAC, }),\n    withRouter,\n    withAuthRedirect\n)(ChatsContainer);\n","import style from \"./Filter.module.scss\";\nimport React from \"react\";\n\nexport function Filter() {\n    return <div className={style.filter}>\n        <div>Sort by: <span>trending</span></div>\n    </div>\n}\n\n","import React from \"react\";\nimport style from \"./Button.module.css\";\n\n\nexport function Button () {\n    return <div className={style.buttonCon}>\n        <button className={style.button}>write new article</button>\n    </div>\n}","import React from \"react\";\nimport style from \"./MyGroups.module.css\";\n\nexport function MyGroups() {\n    return <div className={style.myGroups}>\n        <div className={style.head}>jhrbfjhsbvjhs</div>\n        <div className={style.body}>dsbhvhjvshf</div>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/ProfileImg.02b58e00.jpg\";","export default __webpack_public_path__ + \"static/media/user.62bc9fd6.png\";","import React from 'react';\nimport './Spinner.css';\n\nexport function Spinner() {\n   return <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n   </div>\n}\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport s from './ProfileUser.module.scss';\nimport profileBg from '../../../../img/profile/ProfileImg.jpg'\nimport profilePhoto from '../../../../img/icons/user.png'\nimport { ProfileType } from \"../../../../redux/profile-reducer\";\nimport { Spinner } from \"../../../common/Spinner/Spinner\";\n\ntype ProfileUserPropsType = {\n   profile: null | ProfileType\n   status: string\n   updateStatus: (status: string) => void\n}\n\nconst ProfileUser = (props: ProfileUserPropsType) => {\n\n   const { profile, status, updateStatus } = props;\n\n   const [editMode, setEditMode] = useState<boolean>(false);\n   const [newStatus, setNewStatus] = useState<string>(status);\n\n   useEffect(() => {\n      console.log('useEffect status');\n      \n      setNewStatus(status)\n   }, [status])\n\n\n   const activatedEditMod = () => {\n      setEditMode(true);\n   }\n\n   const diactivedEditModEditMod = () => {\n      setEditMode(false);\n      updateStatus(newStatus);\n\n   }\n\n   let onChangeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setNewStatus(e.currentTarget.value);\n   }\n\n   if (!profile) {\n      return <Spinner />\n   }\n   return <div className={s.profile}>\n      <img className={s.bg} src={profileBg} alt=\"profileImg\" />\n      <div>\n         <img className={s.photo} src={profile.photos.large !== null ? profile.photos.large : profilePhoto} alt=\"userPhoto\" />\n      </div>\n      <div className={s.title}>{props.profile?.fullName}</div>\n      {!editMode &&\n         <span onDoubleClick={activatedEditMod} className={s.descr}>{status || '---'}</span>\n      }\n      {editMode &&\n         <input onChange={onChangeStatus}\n            onBlur={diactivedEditModEditMod} autoFocus className={s.descr} value={newStatus} />\n      }\n   </div>\n}\n\nexport {\n   ProfileUser\n}","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { ProfileUser } from \"./ProfileUser\";\nimport { ProfileType, getProfileTC, getStatusTC, updateStatusTC } from '../../../../redux/profile-reducer';\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { AppStateType } from \"../../../../redux/redux-store\";\nimport { compose } from \"redux\";\n\ntype ProfileUserPropsType = {\n   \n}\n\ntype MapStateToPropsType = {\n   profile: null | ProfileType\n   status: string\n   id: number | null\n}\n\ntype MapDispatchToPropsType = {\n   getProfileTC: (userId: number) => void\n   getStatusTC: (userId: number) => void\n   updateStatusTC: (status: string) => void\n}\n\nclass ProfileUserContainer extends React.Component<RouteComponentProps<any> & ProfileUserPropsType & MapStateToPropsType & MapDispatchToPropsType> {\n   componentDidMount() {\n      let profileId = this.props.match.params.userId\n      if (!profileId) {\n         profileId = this.props.id\n      }\n\n      this.props.getProfileTC(profileId)\n      this.props.getStatusTC(profileId)\n   }\n \n   componentDidUpdate(prevProps: any, prevState: any){\n      if(prevProps.status !== this.props.status){\n         this.setState({state: this.props.status})\n      }\n      console.log('componentDidUpdate');\n   }\n   render() {\n      console.log('render');\n      \n      return <ProfileUser {...this.props}\n         profile={this.props.profile}\n         status={this.props.status} \n         updateStatus={this.props.updateStatusTC}/>\n   }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n   return {\n      profile: state.profilePage.profile,\n      status: state.profilePage.status,\n      id: state.auth.id\n   }\n}\n\n// const connected = connect(mapStateToProps, { getProfileTC, getStatusTC, updateStatusTC })(ProfileUserContainer);\n//  withRouter(connected);\nexport default compose<React.ComponentType>(\n   connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, { getProfileTC, getStatusTC, updateStatusTC }),\n   withRouter\n)(ProfileUserContainer)","import React from \"react\";\n\n\nimport s from \"./Sidebar.module.css\"\nimport {Button} from \"./Button/Button\";\nimport {MyGroups} from \"./MyGroups/MyGroups\";\n\nimport ProfileUserContainer from \"./ProfileUser/ProfileUserContainer\";\n\nexport function Sidebar() {\n    return <div className={s.sidebar}>\n        <ProfileUserContainer/>\n        <Button/>\n        <MyGroups/>\n    </div>\n}","import React from \"react\";\nimport s from \"./ProfileInfo.module.scss\"\n\ntype ProfileInfoPropsType = {\n    name: string\n    avatar: string\n}\nexport function ProfileInfo({name, avatar}: ProfileInfoPropsType) {\n    return <div className={s.profileInfo}>\n        <div className={s.userImg}><img src={avatar} alt=\"profileImg\"/></div>\n        <div className={s.userName}>{name}</div>\n    </div>\n\n}","import s from \"./NewMess.module.scss\";\nimport React from \"react\";\n\ntype NewMessPropsType = {\n    messages: string\n    like: number\n}\n\nexport function NewMess(props: NewMessPropsType) {\n    return <div>\n        <div className={s.newMess}>{props.messages}</div>\n        <div className={s.like}>Like {props.like}</div>\n    </div>\n\n}","import React from \"react\";\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\nimport { NewMess } from \"./NewMess/NewMess\";\n\n\nexport type MyPostPropsType = {\n    id: number\n    name: string\n    avatar: string\n    messages: string\n    like: number\n}\n\nexport function MyPost(props: MyPostPropsType) {\n\n    return <div>\n        <ProfileInfo name={props.name} avatar={props.avatar} />\n        <NewMess messages={props.messages} like={props.like} />\n    </div>\n}","var _rect, _path, _path2, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 32,\n    height: 32,\n    rx: 4,\n    fill: \"url(#paint0_linear)\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.6666 10.3333L14.3333 17.6667\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.6666 10.3333L16.9999 23.6667L14.3333 17.6667L8.33325 15L21.6666 10.3333Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 16,\n    y1: 0,\n    x2: 16,\n    y2: 32,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0077B5\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#0E6795\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.e42eee12.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport s from './NewPost.module.scss'\nimport { ReactComponent as ReactSend } from './icons/send.svg'\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { maxLengthCreate, required } from '../../../utils/validation/validation';\nimport { Textarea } from '../../common/FormControls/FormControls';\n\ntype NewPostPropsType = {\n    addPostAC: (message: string) => void\n}\n\nexport function NewPost(props: NewPostPropsType) {\n\n    const { addPostAC } = props\n\n    const addNewPostMessage = (values: any) => {\n        addPostAC(values.message)\n    }\n\n    return <div className={s.newPost_head}>\n        <div className={s.title}>new post</div>\n        <NewPostMessRedux onSubmit={addNewPostMessage} />\n    </div>\n}\n\nconst maxLength10 = maxLengthCreate(10);\n\nconst NewPostMess: React.FC<InjectedFormProps<NewPostPropsType>> = (props) => {\n    return (\n        <form className={s.text} onSubmit={props.handleSubmit}>\n            <Field component={Textarea}\n                name=\"message\"\n                validate={[required, maxLength10]}\n                placeholder='What’s on your mind?' />\n            <button className={s.btn}><ReactSend /></button>\n        </form>\n    )\n}\n\nconst NewPostMessRedux = reduxForm<NewPostPropsType>({ form: 'newPostMessage' })(NewPostMess)\n\n\n","import { connect } from 'react-redux';\nimport { addPostAC} from '../../../redux/profile-reducer';\nimport { AppStateType } from '../../../redux/redux-store';\nimport { NewPost } from './NewPost';\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        message: state.postsPage.newPostText\n    }\n}\n\nconst NewPostContainer = connect(mapStateToProps, { addPostAC })(NewPost);\n\nexport {\n    NewPostContainer\n}","import React from 'react';\nimport { Filter } from \"./Filter/Filter\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { MyPost } from './MyPost/MyPost';\nimport { NewPostContainer } from './NewPost/NewPostContainer';\nimport { PostType } from '../../redux/store';\n\nimport c from '../Container.module.scss';\nimport s from './Posts.module.scss';\n\n\ntype PostsPropsType = {\n    posts: Array<PostType>\n    isAuth: boolean\n}\n\nexport const Posts = React.memo((props: PostsPropsType) =>  {\n\n    let postElement = props.posts.map(p => <MyPost key={p.id} id={p.id} avatar={p.avatar} name={p.name} like={p.like} messages={p.messages} />)\n    return (\n        <div className={c.container}>\n            <div className={s.post}>\n                <div className={s.newPost}>\n                    <NewPostContainer />\n                    <Filter />\n                    <div className={s.newPost_body}>\n                        {postElement}\n                    </div>\n                </div>\n                <Sidebar />\n            </div>\n        </div>\n    );\n})","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { PostType } from '../../redux/profile-reducer';\nimport { AppStateType } from '../../redux/redux-store';\nimport {Posts} from './Posts';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\ntype PostContainerType = {\n    posts: PostType[]\n    isAuth: boolean\n}\n\ntype MSTPType = {\n    posts: PostType[]\n\n}\n\nexport class PostContainer extends Component<PostContainerType>{\n    render() {\n        return <Posts {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MSTPType => {\n    return {\n        posts: state.postsPage.posts\n    }\n}\n// const AuthRedirectComponent = (props: any) => {\n//     if (!props.isAuth) return <Redirect to='/login' />;\n//     return <PostContainer {...props} />;\n// }\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps),\n    withRouter,\n    withAuthRedirect\n)(PostContainer);","import React, { useState } from 'react';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport s from './Paginator.module.scss';\n\ntype PaginatorType = {\n  totalUsersCount: number;\n  pageSize: number;\n  currentPage: number;\n  portionSize?: number;\n  onPageChange: (pageNumber: number) => void;\n  onPageSizeChange: (pageNumber: number, pageSize: number) => void;\n};\n\nexport const Paginator = (props: PaginatorType) => {\n  const {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChange,\n    portionSize = 10,\n    onPageSizeChange,\n  } = props;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState<number>(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  return (\n    <div>\n      <div className={s.lists}>\n        {portionNumber > 1 && (\n          <IoIosArrowBack\n            className={s.arrow}\n            onClick={() => setPortionNumber(portionNumber - 1)}\n          />\n        )}\n        {pages\n          .filter(\n            (page) =>\n              page >= leftPortionPageNumber && page <= rightPortionPageNumber\n          )\n          .map((page, index) => (\n            <button\n              key={index}\n              className={currentPage === page ? s.selectedPage : ''}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </button>\n          ))}\n        {portionCount > portionNumber && (\n          <IoIosArrowForward\n            className={s.arrow}\n            onClick={() => setPortionNumber(portionNumber + 1)}\n          />\n        )}\n      </div>\n      <div className={s.pageSize}>\n        Page Size:\n        <span\n          onClick={() => onPageSizeChange(1, 5)}\n          className={pageSize===5 ? s.active : ''}\n        >\n          5\n        </span>\n        <span\n          onClick={() => onPageSizeChange(1, 10)}\n          className={pageSize===10 ? s.active : ''}\n        >\n          10\n        </span>\n        <span\n          onClick={() => onPageSizeChange(1, 15)}\n          className={pageSize===15 ? s.active : ''}\n        >\n          15\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport s from './User.module.scss';\nimport photoUser from '../../../img/icons/user.png';\nimport { UsersType } from '../../../redux/users-reducer';\n\ntype UserPropsType = {\n  user: UsersType\n  followingInProgress: number[]\n  follow: (userId: number) => void\n  unFollow: (userId: number) => void\n}\n\nexport const User = (props: UserPropsType) => {\n  const { user, followingInProgress, unFollow, follow } = props\n  return (\n    <div className={s.wrapper}>\n      <div className={s.avatar}>\n        <NavLink to={'/profile/' + user.id}>\n          <img src={user.photos.small !== null ? user.photos.small : photoUser} alt=\"avatar\" />\n        </NavLink>\n        <div>\n          <div>{user.name}</div>\n          <div>{'user.location.country'}</div>\n          <div>{'user.location.city'}</div>\n        </div>\n      </div>\n      <div className={s.description}>\n        <div className={s.line}></div>\n        <div className={s.text}>\n          Hey, I saw your works. I like it! Can we do something together? Or maybe you have project for UX at the moment?\n        </div>\n      </div>\n      {user.followed\n        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n          unFollow(user.id)\n        }}>UNFOLLOW</button>\n        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n          follow(user.id)\n        }}>FOLLOW</button>}\n    </div>\n  )\n}","import React from 'react';\nimport { UsersType } from '../../redux/users-reducer';\nimport s from './Users.module.scss';\nimport c from '../Container.module.scss';\nimport { Paginator } from '../common/Paginator/Paginator';\nimport { User } from '../common/User/User';\n\ntype UsersPropsType = {\n  users: UsersType[];\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  follow: (userId: number) => void;\n  unFollow: (userId: number) => void;\n  onPageChange: (pageNumber: number) => void;\n  followingInProgress: number[];\n  setFollowingInProgress: (isFatching: boolean, userId: number) => void;\n  onPageSizeChange: (pageNumber: number, pageSize: number) => void\n};\n\nfunction Users(props: UsersPropsType) {\n  const {\n    users,\n    pageSize,\n    totalUsersCount,\n    currentPage,\n    follow,\n    unFollow,\n    onPageChange,\n    followingInProgress,\n    onPageSizeChange,\n  } = props;\n\n  return (\n    <div className={c.container}>\n      <div className={s.users}>\n        <Paginator\n          totalUsersCount={totalUsersCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n          onPageSizeChange={onPageSizeChange}\n        />\n        <div>\n          {users.map((u) => (\n            <User\n              key={u.id}\n              user={u}\n              followingInProgress={followingInProgress}\n              follow={follow}\n              unFollow={unFollow}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Users };\n","import { AppStateType } from \"./redux-store\";\nimport { createSelector } from 'reselect'\n\ntype GetUsersType = ReturnType<typeof getUsers>;\ntype GetPageSizeType = ReturnType<typeof getPageSize>;\ntype GetTotalUsersCountType = ReturnType<typeof getTotalUsersCount>;\ntype GetCurrentPageType = ReturnType<typeof getCurrentPage>;\ntype GetIsFatchingType = ReturnType<typeof getIsFatching>;\ntype GetFollowingInProgressType = ReturnType<typeof getFollowingInProgress>\n\nexport type SelectesType = GetUsersType\n  | GetPageSizeType\n  | GetTotalUsersCountType\n  | GetCurrentPageType\n  | GetIsFatchingType\n  | GetFollowingInProgressType\n\nexport const getUsers = (state: AppStateType) => state.usersPage.users;\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize;\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount;\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage;\nexport const getIsFatching = (state: AppStateType) => state.usersPage.isFatching;\nexport const getFollowingInProgress = (state: AppStateType) => state.usersPage.followingInProgress;\n\n//selectors\nexport const publishedUsersSelector = createSelector(\n  getUsers,\n  (users)=>users.filter(u=>true)\n)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { follow, unFollow, setCurrentPage, setFollowingInProgress, getUsersTC, UsersType, setPageSize } from '../../redux/users-reducer';\nimport { Users } from './Users';\nimport { Spinner } from '../common/Spinner/Spinner';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFatching, getFollowingInProgress, publishedUsersSelector } from '../../redux/users-selects';\n\ntype UsersPropsType = {\n  users: UsersType[];\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  isFatching: boolean;\n  followingInProgress: number[];\n  follow: (userId: number) => void;\n  unFollow: (userId: number) => void;\n  setCurrentPage: (pageNumber: number) => void;\n  setFollowingInProgress: (isFatching: boolean, userId: number) => void;\n  getUsersTC: (currentPage: number, pageSize: number) => void;\n  getPageSize: (pageNumber: number, pageSize: number) => void\n}\n\ntype MSTP = {\n   users: UsersType[]\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFatching: boolean\n   followingInProgress: number[]\n}\n\nclass UsersContainer extends React.Component<UsersPropsType> {\n  componentDidMount() {\n    const { getUsersTC, currentPage, pageSize } = this.props;\n    getUsersTC(currentPage, pageSize);\n  }\n\n  onPageChange = (pageNumber: number) => {\n    const { getUsersTC, setCurrentPage, pageSize } = this.props;\n    getUsersTC(pageNumber, pageSize);\n    setCurrentPage(pageNumber);\n    setPageSize(pageSize);\n  };\n\n  onPageSizeChange = (pageNumber: number, pageSize: number) => {\n    const { getUsersTC } = this.props;\n    getUsersTC(pageNumber, pageSize);\n    setPageSize(pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFatching ? <Spinner /> : null}\n        <Users\n          users={this.props.users}\n          pageSize={this.props.pageSize}\n          totalUsersCount={this.props.totalUsersCount}\n          currentPage={this.props.currentPage}\n          follow={this.props.follow}\n          unFollow={this.props.unFollow}\n          onPageChange={this.onPageChange}\n          followingInProgress={this.props.followingInProgress}\n          setFollowingInProgress={this.props.setFollowingInProgress}\n          onPageSizeChange = {this.onPageSizeChange}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MSTP => {\n   return {\n      users: publishedUsersSelector(state),\n      pageSize: getPageSize(state),\n      totalUsersCount: getTotalUsersCount(state),\n      currentPage: getCurrentPage(state),\n      isFatching: getIsFatching(state),\n      followingInProgress: getFollowingInProgress(state)\n   }\n}\n\nexport default compose<React.ComponentType>(connect(mapStateToProps,\n   {\n      follow,\n      unFollow,\n      setCurrentPage,\n      setPageSize,\n      setFollowingInProgress,\n      getUsersTC,\n   }),\n   withRouter,\n   withAuthRedirect)(UsersContainer);","export default __webpack_public_path__ + \"static/media/footer_logo.bc41ad14.png\";","import React from \"react\";\nimport s from './Footer.module.scss'\nimport logo from './footer_logo.png'\nexport const Footer = () => {\n   return <div className={s.footer}>\n      <div className={s.wrapper}>\n         <img src={logo} alt='logo' />\n         <div className={s.navigation}>Navigation</div>\n         <div className={s.access}>Fast access</div>\n         <div className={s.language}>Language</div>\n      </div>\n   </div>\n}","import React from 'react';\nimport s from './Acount.module.scss';\n\ntype AccountPropsType = {\n    email: null | string\n    login: null | string\n}\n\nfunction Account({ email, login }: AccountPropsType) {\n    return (\n        <div className={s.account}>\n            <a className={s.user} href='#1'>\n                <img src='https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg' alt='userPhoto' />\n            </a>\n            <div className={s.wrapper}>\n                <div className={s.title}>{login}</div>\n                <div>you</div>\n                <div>{email}</div>\n                <div>+32</div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Account;","import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { AuthType, loginTC, loginoutTC } from '../../redux/auth-reducer';\nimport Account from \"./Account/Account\";\nimport s from './Login.module.scss';\nimport c from '../Container.module.scss'\nimport { FormError, Input, createField } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validation/validation';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { AppStateType } from \"../../redux/redux-store\";\n\ntype LoginPropsType = {\n   isAuth: boolean\n   auth: AuthType\n   loginTC: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype FormDataType = {\n   email: string\n   password: string\n   rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n   const { error, handleSubmit } = props\n   return (\n      <form onSubmit={handleSubmit}>\n         {createField('email', 'Email', Input, [required])}\n         {createField('password', 'Password', Input, [required], { type: 'password' })}\n         {createField('rememberMe', null, Input, [], { type: 'checkbox' }, 'rememberMe')}\n         <div>\n            <label htmlFor='rememberMe'>rememberMe</label>\n         </div>\n         \n         {error ? <div className={s.error}>\n            <Field name='error' component={FormError} />{error}\n         </div> : ''}\n         <button>LOGIN</button>\n      </form>\n   )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({\n   // a unique name for the form\n   form: 'login'\n})(LoginForm)\n\nconst Login = (props: LoginPropsType) => {\n   const { isAuth, loginTC } = props\n   const { email, login } = props.auth\n\n   const submit = (formData: FormDataType) => {\n      const { email, password, rememberMe } = formData\n      loginTC(email, password, rememberMe);\n   }\n\n   if (isAuth) {\n      return <Redirect to={'/profile'} />\n   }\n\n   return (<div className={c.container}>\n      {isAuth ? <Account email={email} login={login} /> :\n         <div className={s.loginBlock}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={submit} />\n         </div>\n      }\n   </div>);\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n   isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { loginTC, loginoutTC })(Login)","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport { getAuthUserDataTC, AuthType } from '../../redux/auth-reducer';\nimport { AppStateType } from '../../redux/redux-store';\n\ntype LoginContainerType = {\n   getAuthUserDataTC: (\n      id: null | number,\n      email: null | string,\n      login: null | string) => void\n}\n\nclass LoginContainer extends React.Component<LoginContainerType & mapStateToPropsType> {\n\n   componentDidMount() {\n      const { getAuthUserDataTC, auth } = this.props\n      getAuthUserDataTC(auth.id, auth.email, auth.email)\n   }\n   render() {\n      return <Login {...this.props} />\n   }\n}\n\ntype mapStateToPropsType = {\n   auth: AuthType\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n   return {\n      auth: state.auth\n   }\n}\n\nexport default connect(mapStateToProps, { getAuthUserDataTC })(LoginContainer)","export default __webpack_public_path__ + \"static/media/Logo.f7bd9b2f.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Item.module.scss\";\n\ntype ItemPropsType = {\n    title: string\n    link: string\n    icon: string\n}\n\nfunction Item({title, link, icon}: ItemPropsType) {\n    return (\n        <div className={s.item}>\n            <NavLink to={link} activeClassName={s.activeLink}>\n                <img src={icon} alt='icon'/>\n                <h3>{title}</h3>\n            </NavLink>\n        </div>\n    );\n}\n\nexport default Item; ","import React from \"react\";\nimport s from './Search.module.scss';\n\nconst Search = () => {\n    return (\n        <div className={s.search}>\n            <input type='text' placeholder='Search'/>\n        </div>\n    );\n}\n\nexport default Search;","export default __webpack_public_path__ + \"static/media/chats.c7ca806c.svg\";","export default __webpack_public_path__ + \"static/media/posts.bc0b2980.svg\";","export default __webpack_public_path__ + \"static/media/music.c6da5b64.svg\";","export default __webpack_public_path__ + \"static/media/setting.afdffdf9.svg\";","export default __webpack_public_path__ + \"static/media/users.e9db7247.svg\";","export default __webpack_public_path__ + \"static/media/other.6c6d6a59.svg\";","import React from 'react';\nimport ReactLogo from './icons/Logo.png'\n\n//import components\nimport Item from \"./item/Item\";\nimport Search from \"./search/Search\";\n\n//import css\nimport s from './Navigation.module.scss';\nimport chats from './item/icons/chats.svg';\nimport posts from './item/icons/posts.svg';\nimport music from './item/icons/music.svg';\nimport setting from './item/icons/setting.svg';\nimport users from './item/icons/users.svg';\nimport other from './item/icons/other.svg';\nimport Account from '../Login/Account/Account';\nimport { AuthType } from '../../redux/auth-reducer';\nimport { NavLink } from 'react-router-dom';\n\ntype NavigationPropsType = {\n    loginoutTC: () => void\n    auth: AuthType\n}\n\nfunction Navigation({ loginoutTC, ...props }: NavigationPropsType) {\n    const { email, login, isAuth } = props.auth\n    return (\n        <nav className={s.nav}>\n\n            <div className={s.container}>\n                <div className={s.wrapper}>\n                    <img className={s.logo} src={ReactLogo} alt='logo' />\n                    <div className={s.container}>\n                        <div className={s.wrapperItems}>\n                            <Item title={'Posts'} link={'../../Posts/Posts.tsx'} icon={posts} />\n                            <Item title={'Chats'} link={'../../Chats/Chats.tsx'} icon={chats} />\n                            <Item title={'news'} link={'../../News/News.tsx'} icon={music} />\n                            <Item title={'users'} link={'../../Users/Users.tsx'} icon={users} />\n                            <Item title={'setting'} link={'../../Setting/Setting.tsx'} icon={setting} />\n                        </div>\n                        <Search />\n                        <div className={s.loginBlock}>\n                            {isAuth ? <div>\n                                <Account email={email} login={login} />\n                                <button onClick={loginoutTC}>Log out</button>\n                            </div> :\n                                <div className={s.loginBlock}>\n                                    <NavLink to=\"/login\">\n                                        <h1>Login</h1>\n                                    </NavLink>\n                                </div>}\n                        </div>\n\n                    </div>\n                    <Item title={'other'} link={'../../Other/Other.tsx'} icon={other} />\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navigation;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AuthType, getAuthUserDataTC, loginoutTC } from '../../redux/auth-reducer';\nimport { AppStateType } from \"../../redux/redux-store\";\nimport Navigation from './Navigation';\n\ntype NavigationContainerPropsType = {\n   getAuthUserDataTC: (\n      id: null | number,\n      email: null | string,\n      login: null | string) => void\n   loginoutTC: () => void\n}\n\nclass NavigationContainer extends React.Component<NavigationContainerPropsType & mapStateToPropsType>{\n   componentDidMount() {\n      this.props.getAuthUserDataTC(this.props.auth.id, this.props.auth.email, this.props.auth.email)\n   }\n   render() {\n      return <Navigation {...this.props} />\n   }\n}\n\ntype mapStateToPropsType = {\n   auth: AuthType\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n   return {\n      auth: state.auth\n   }\n}\n\nexport default connect(mapStateToProps, { getAuthUserDataTC, loginoutTC })(NavigationContainer)\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n//import components\nimport ChatsContainer from '../Chats/ChatsContainer';\nimport PostsContainer from '../Posts/PostsContainer';\nimport UsersContainer from '../Users/UsersContainer';\nimport { Footer } from '../Footer/Footer';\nimport ProfileUserContainer from '../Posts/Sidebar/ProfileUser/ProfileUserContainer';\nimport LoginContainer from '../Login/LoginContainer';\nimport NavigationContainer from '../Navigation/NavigationContainer';\n\n// import News from './components/News/News';\n// import Setting from './components/Setting/Setting';\n// import Other from './components/Other/Other';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from '../../redux/app-reducer';\nimport { AppStateType } from '../../redux/redux-store';\nimport { Spinner } from '../common/Spinner/Spinner';\n\ninterface AppPropsType extends React.Component {\n    initializeApp: () => void\n\n}\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\nclass App extends React.Component<AppPropsType & mapStateToPropsType, {}> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Spinner />\n        }\n\n        return (\n            <div>\n                <NavigationContainer />\n                <Route path={'/profile/:userId?'} render={() => <ProfileUserContainer />} />\n                <Route path={'/posts'} render={() => <PostsContainer />} />\n                <Route path={'/chats'} render={() => <ChatsContainer />} />\n                {/* <Route path={'/news'} render={() => <News />} /> */}\n                <Route path={'/users'} render={() => <UsersContainer />} />\n                <Route path={'/login'} render={() => <LoginContainer />} />\n                {/* <Route path={'/setting'} render={() => <Setting />} />\n            <Route path={'/other'} render={() => <Other />} /> */}\n                <Footer />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, { initializeApp }))(App);\n","import React from 'react';\nimport './index.css';\nimport store from './redux/redux-store';\nimport App from './components/App/App';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n// const renderEntireTree = (state: AppStateType) => {\n\nReactDOM.render(<BrowserRouter>\n    <Provider store={store}>\n        <App />\n    </Provider>\n</BrowserRouter>,\n    document.getElementById('root')\n)\n// }\n\n// renderEntireTree(store.getState());\n\n// store.subscribe(() => {\n//     let state = store.getState()\n//     renderEntireTree(state);\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2AsUs\",\"container\":\"Navigation_container__28f2r\",\"wrapper\":\"Navigation_wrapper__210y3\",\"logo\":\"Navigation_logo__QwHBD\",\"wrapperItems\":\"Navigation_wrapperItems__2T59o\",\"loginBlock\":\"Navigation_loginBlock__1ql5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lHqDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileUser_profile__3reBe\",\"bg\":\"ProfileUser_bg__cric7\",\"photo\":\"ProfileUser_photo__2wLKu\",\"title\":\"ProfileUser_title__1emXh\",\"descr\":\"ProfileUser_descr__A7Ceb\",\"status\":\"ProfileUser_status__3aznk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__25Uvx\",\"avatar\":\"User_avatar__25OED\",\"description\":\"User_description__Bn-Ib\",\"line\":\"User_line__3lm0N\",\"text\":\"User_text__29fDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"wrapper\":\"Footer_wrapper__35wdE\",\"navigation\":\"Footer_navigation__3miRx\",\"access\":\"Footer_access__3Hkl2\",\"language\":\"Footer_language__1GRk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost_head\":\"NewPost_newPost_head__bhuHp\",\"title\":\"NewPost_title__3584U\",\"text\":\"NewPost_text__3StDx\",\"textarea\":\"NewPost_textarea__3qglv\",\"btn\":\"NewPost_btn__1hhYD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Acount_account__2SDlZ\",\"wrapper\":\"Acount_wrapper__On4Hy\",\"title\":\"Acount_title__1Dz0K\",\"user\":\"Acount_user__ycv2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myGroups\":\"MyGroups_myGroups__2ViCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__jqJWA\",\"userName\":\"ProfileInfo_userName__321rO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Posts_post__LyNp_\",\"newPost\":\"Posts_newPost__2D2Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonCon\":\"Button_buttonCon__19LDd\",\"button\":\"Button_button__1z1p6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMess\":\"NewMess_newMess__rsOhC\",\"like\":\"NewMess_like__2d0KY\"};"],"sourceRoot":""}