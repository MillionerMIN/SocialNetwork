{"version":3,"sources":["components/Container.module.scss","img/icons/user.png","hoc/WithAuthRedirect.tsx","components/Users/Users.module.scss","components/common/Paginator/Paginator.module.scss","components/common/User/User.module.scss","components/common/Paginator/Paginator.tsx","components/common/User/User.tsx","components/Users/Users.tsx","redux/users-selects.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","mapStateToPropsForRiderect","state","isAuth","auth","withAuthRedirect","ChildComp","connect","props","restProps","to","Paginator","totalUsersCount","pageSize","currentPage","onPageChange","portionSize","onPageSizeChange","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","lists","arrow","onClick","filter","page","map","index","selectedPage","active","User","user","followingInProgress","unFollow","follow","wrapper","avatar","id","src","photos","small","photoUser","alt","name","description","line","text","followed","disabled","some","Users","users","c","container","u","getPageSize","usersPage","getTotalUsersCount","getCurrentPage","getIsFatching","isFatching","getFollowingInProgress","publishedUsersSelector","createSelector","UsersContainer","pageNumber","getUsersTC","setCurrentPage","setPageSize","this","Spinner","setFollowingInProgress","React","Component","compose","withRouter"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,+B,iCCDf,QAA0B,kC,mHCUnCC,EAA6B,SAACC,GACjC,MAAO,CACJC,OAAQD,EAAME,KAAKD,SAIlB,SAASE,EAAqBC,GAQlC,OADiCC,YAAQN,EAARM,EALP,SAACC,GAAoB,IACrCL,EAAwBK,EAAxBL,OAAWM,EADyB,YACZD,EADY,YAE3C,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAG,gB,oBCnBvCX,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,aAAe,gCAAgC,SAAW,4BAA4B,OAAS,4B,oBCAnLD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,qBAAqB,YAAc,0BAA0B,KAAO,mBAAmB,KAAO,qB,2LCY5IW,EAAY,SAACH,GAWxB,IAXkD,IAEhDI,EAMEJ,EANFI,gBACAC,EAKEL,EALFK,SACAC,EAIEN,EAJFM,YACAC,EAGEP,EAHFO,aAL+C,EAQ7CP,EAFFQ,mBAN+C,MAMjC,GANiC,EAO/CC,EACET,EADFS,iBAEEC,EAAaC,KAAKC,KAAKR,EAAkBC,GACzCQ,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAME,KAAKD,GAGb,IAAIE,EAAeL,KAAKC,KAAKF,EAAaF,GAfO,EAgBPS,mBAAiB,GAhBV,mBAgB1CC,EAhB0C,KAgB3BC,EAhB2B,KAiB7CC,GAAyBF,EAAgB,GAAKV,EAAc,EAC5Da,EAAyBH,EAAgBV,EAE7C,OACE,gCACE,sBAAKc,UAAWC,IAAEC,MAAlB,UACGN,EAAgB,GACf,cAAC,IAAD,CACEI,UAAWC,IAAEE,MACbC,QAAS,kBAAMP,EAAiBD,EAAgB,MAGnDL,EACEc,QACC,SAACC,GAAD,OACEA,GAAQR,GAAyBQ,GAAQP,KAE5CQ,KAAI,SAACD,EAAME,GAAP,OACH,wBAEER,UAAWhB,IAAgBsB,EAAOL,IAAEQ,aAAe,GACnDL,QAAS,kBAAMnB,EAAaqB,IAH9B,SAKGA,GAJIE,MAOVd,EAAeE,GACd,cAAC,IAAD,CACEI,UAAWC,IAAEE,MACbC,QAAS,kBAAMP,EAAiBD,EAAgB,SAItD,sBAAKI,UAAWC,IAAElB,SAAlB,uBAEE,sBACEqB,QAAS,kBAAMjB,EAAiB,EAAG,IACnCa,UAAsB,IAAXjB,EAAekB,IAAES,OAAS,GAFvC,eAMA,sBACEN,QAAS,kBAAMjB,EAAiB,EAAG,KACnCa,UAAsB,KAAXjB,EAAgBkB,IAAES,OAAS,GAFxC,gBAMA,sBACEN,QAAS,kBAAMjB,EAAiB,EAAG,KACnCa,UAAsB,KAAXjB,EAAgBkB,IAAES,OAAS,GAFxC,uB,mCChEKC,EAAO,SAACjC,GAA0B,IACrCkC,EAAgDlC,EAAhDkC,KAAMC,EAA0CnC,EAA1CmC,oBAAqBC,EAAqBpC,EAArBoC,SAAUC,EAAWrC,EAAXqC,OAC7C,OACE,sBAAKf,UAAWC,IAAEe,QAAlB,UACE,sBAAKhB,UAAWC,IAAEgB,OAAlB,UACE,cAAC,IAAD,CAASrC,GAAI,YAAcgC,EAAKM,GAAhC,SACE,qBAAKC,IAA2B,OAAtBP,EAAKQ,OAAOC,MAAiBT,EAAKQ,OAAOC,MAAQC,IAAWC,IAAI,aAE5E,gCACE,8BAAMX,EAAKY,OACX,8BAAM,0BACN,8BAAM,6BAGV,sBAAKxB,UAAWC,IAAEwB,YAAlB,UACE,qBAAKzB,UAAWC,IAAEyB,OAClB,qBAAK1B,UAAWC,IAAE0B,KAAlB,gIAIDf,EAAKgB,SACF,wBAAQC,SAAUhB,EAAoBiB,MAAK,SAAAZ,GAAE,OAAIA,IAAON,EAAKM,MAAKd,QAAS,WAC3EU,EAASF,EAAKM,KADd,sBAGA,wBAAQW,SAAUhB,EAAoBiB,MAAK,SAAAZ,GAAE,OAAIA,IAAON,EAAKM,MAAKd,QAAS,WAC3EW,EAAOH,EAAKM,KADZ,wBCjBV,SAASa,EAAMrD,GAAwB,IAEnCsD,EASEtD,EATFsD,MACAjD,EAQEL,EARFK,SACAD,EAOEJ,EAPFI,gBACAE,EAMEN,EANFM,YACA+B,EAKErC,EALFqC,OACAD,EAIEpC,EAJFoC,SACA7B,EAGEP,EAHFO,aACA4B,EAEEnC,EAFFmC,oBACA1B,EACET,EADFS,iBAGF,OACE,qBAAKa,UAAWiC,IAAEC,UAAlB,SACE,sBAAKlC,UAAWC,IAAE+B,MAAlB,UACE,cAAC,EAAD,CACElD,gBAAiBA,EACjBC,SAAUA,EACVC,YAAaA,EACbC,aAAcA,EACdE,iBAAkBA,IAEpB,8BACG6C,EAAMzB,KAAI,SAAC4B,GAAD,OACT,cAAC,EAAD,CAEEvB,KAAMuB,EACNtB,oBAAqBA,EACrBE,OAAQA,EACRD,SAAUA,GAJLqB,EAAEjB,c,6CC5BRkB,EAAc,SAAChE,GAAD,OAAyBA,EAAMiE,UAAUtD,UACvDuD,EAAqB,SAAClE,GAAD,OAAyBA,EAAMiE,UAAUvD,iBAC9DyD,EAAiB,SAACnE,GAAD,OAAyBA,EAAMiE,UAAUrD,aAC1DwD,EAAgB,SAACpE,GAAD,OAAyBA,EAAMiE,UAAUI,YACzDC,EAAyB,SAACtE,GAAD,OAAyBA,EAAMiE,UAAUxB,qBAGlE8B,EAAyBC,aARd,SAACxE,GAAD,OAAyBA,EAAMiE,UAAUL,SAU/D,SAACA,GAAD,OAASA,EAAM3B,QAAO,SAAA8B,GAAC,OAAE,QCQrBU,E,4MAMJ5D,aAAe,SAAC6D,GAAwB,IAAD,EACY,EAAKpE,MAA9CqE,EAD6B,EAC7BA,WAAYC,EADiB,EACjBA,eAAgBjE,EADC,EACDA,SACpCgE,EAAWD,EAAY/D,GACvBiE,EAAeF,GACfG,YAAYlE,I,EAGdI,iBAAmB,SAAC2D,EAAoB/D,IAEtCgE,EADuB,EAAKrE,MAApBqE,YACGD,EAAY/D,GACvBkE,YAAYlE,I,uDAfd,WAAqB,IAAD,EAC4BmE,KAAKxE,OACnDqE,EAFkB,EACVA,YADU,EACE/D,YADF,EACeD,Y,oBAiBnC,WACE,OACE,qCACGmE,KAAKxE,MAAM+D,WAAa,cAACU,EAAA,EAAD,IAAc,KACvC,cAACpB,EAAD,CACEC,MAAOkB,KAAKxE,MAAMsD,MAClBjD,SAAUmE,KAAKxE,MAAMK,SACrBD,gBAAiBoE,KAAKxE,MAAMI,gBAC5BE,YAAakE,KAAKxE,MAAMM,YACxB+B,OAAQmC,KAAKxE,MAAMqC,OACnBD,SAAUoC,KAAKxE,MAAMoC,SACrB7B,aAAciE,KAAKjE,aACnB4B,oBAAqBqC,KAAKxE,MAAMmC,oBAChCuC,uBAAwBF,KAAKxE,MAAM0E,uBACnCjE,iBAAoB+D,KAAK/D,0B,GAjCNkE,IAAMC,WAmDpBC,sBAA6B9E,aAXpB,SAACL,GACtB,MAAO,CACJ4D,MAAOW,EAAuBvE,GAC9BW,SAAUqD,EAAYhE,GACtBU,gBAAiBwD,EAAmBlE,GACpCY,YAAauD,EAAenE,GAC5BqE,WAAYD,EAAcpE,GAC1ByC,oBAAqB6B,EAAuBtE,MAK/C,CACG2C,WACAD,aACAkC,mBACAC,gBACAG,2BACAL,iBAEHS,IACAjF,IAVYgF,CAUMV","file":"static/js/5.dc879679.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lHqDY\"};","export default __webpack_public_path__ + \"static/media/user.62bc9fd6.png\";","import React, {  ComponentType } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AppStateType } from \"../redux/redux-store\";\nimport { connect } from 'react-redux';\n\n\ntype MSTPType = {\n   isAuth: boolean\n}\n\nconst mapStateToPropsForRiderect = (state: AppStateType): MSTPType => {\n   return {\n      isAuth: state.auth.isAuth\n   }\n}\n\nexport function withAuthRedirect <T>(ChildComp: ComponentType<T>) {\n\n   const RedirectComponent = (props: MSTPType)=> {\n      const {isAuth, ...restProps} = props;\n      if (!isAuth) return <Redirect to='/login' />;\n      return <ChildComp {...restProps as T} />\n   }\n   let ConnectedRedirectComponent = connect(mapStateToPropsForRiderect)(RedirectComponent)\n   return ConnectedRedirectComponent;\n}\n   \n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3CRqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"Paginator_lists__1ADFg\",\"arrow\":\"Paginator_arrow__mGU_b\",\"selectedPage\":\"Paginator_selectedPage__1y9hK\",\"pageSize\":\"Paginator_pageSize__3A3zC\",\"active\":\"Paginator_active__lQDaF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__25Uvx\",\"avatar\":\"User_avatar__25OED\",\"description\":\"User_description__Bn-Ib\",\"line\":\"User_line__3lm0N\",\"text\":\"User_text__29fDt\"};","import React, { useState } from 'react';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport s from './Paginator.module.scss';\n\ntype PaginatorType = {\n  totalUsersCount: number;\n  pageSize: number;\n  currentPage: number;\n  portionSize?: number;\n  onPageChange: (pageNumber: number) => void;\n  onPageSizeChange: (pageNumber: number, pageSize: number) => void;\n};\n\nexport const Paginator = (props: PaginatorType) => {\n  const {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChange,\n    portionSize = 10,\n    onPageSizeChange,\n  } = props;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState<number>(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  return (\n    <div>\n      <div className={s.lists}>\n        {portionNumber > 1 && (\n          <IoIosArrowBack\n            className={s.arrow}\n            onClick={() => setPortionNumber(portionNumber - 1)}\n          />\n        )}\n        {pages\n          .filter(\n            (page) =>\n              page >= leftPortionPageNumber && page <= rightPortionPageNumber\n          )\n          .map((page, index) => (\n            <button\n              key={index}\n              className={currentPage === page ? s.selectedPage : ''}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </button>\n          ))}\n        {portionCount > portionNumber && (\n          <IoIosArrowForward\n            className={s.arrow}\n            onClick={() => setPortionNumber(portionNumber + 1)}\n          />\n        )}\n      </div>\n      <div className={s.pageSize}>\n        Page Size:\n        <span\n          onClick={() => onPageSizeChange(1, 5)}\n          className={pageSize===5 ? s.active : ''}\n        >\n          5\n        </span>\n        <span\n          onClick={() => onPageSizeChange(1, 10)}\n          className={pageSize===10 ? s.active : ''}\n        >\n          10\n        </span>\n        <span\n          onClick={() => onPageSizeChange(1, 15)}\n          className={pageSize===15 ? s.active : ''}\n        >\n          15\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport s from './User.module.scss';\nimport photoUser from '../../../img/icons/user.png';\nimport { UsersType } from '../../../redux/users-reducer';\n\ntype UserPropsType = {\n  user: UsersType\n  followingInProgress: number[]\n  follow: (userId: number) => void\n  unFollow: (userId: number) => void\n}\n\nexport const User = (props: UserPropsType) => {\n  const { user, followingInProgress, unFollow, follow } = props\n  return (\n    <div className={s.wrapper}>\n      <div className={s.avatar}>\n        <NavLink to={'/profile/' + user.id}>\n          <img src={user.photos.small !== null ? user.photos.small : photoUser} alt=\"avatar\" />\n        </NavLink>\n        <div>\n          <div>{user.name}</div>\n          <div>{'user.location.country'}</div>\n          <div>{'user.location.city'}</div>\n        </div>\n      </div>\n      <div className={s.description}>\n        <div className={s.line}></div>\n        <div className={s.text}>\n          Hey, I saw your works. I like it! Can we do something together? Or maybe you have project for UX at the moment?\n        </div>\n      </div>\n      {user.followed\n        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n          unFollow(user.id)\n        }}>UNFOLLOW</button>\n        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n          follow(user.id)\n        }}>FOLLOW</button>}\n    </div>\n  )\n}","import React from 'react';\nimport { UsersType } from '../../redux/users-reducer';\nimport s from './Users.module.scss';\nimport c from '../Container.module.scss';\nimport { Paginator } from '../common/Paginator/Paginator';\nimport { User } from '../common/User/User';\n\ntype UsersPropsType = {\n  users: UsersType[];\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  follow: (userId: number) => void;\n  unFollow: (userId: number) => void;\n  onPageChange: (pageNumber: number) => void;\n  followingInProgress: number[];\n  setFollowingInProgress: (isFatching: boolean, userId: number) => void;\n  onPageSizeChange: (pageNumber: number, pageSize: number) => void\n};\n\nfunction Users(props: UsersPropsType) {\n  const {\n    users,\n    pageSize,\n    totalUsersCount,\n    currentPage,\n    follow,\n    unFollow,\n    onPageChange,\n    followingInProgress,\n    onPageSizeChange,\n  } = props;\n\n  return (\n    <div className={c.container}>\n      <div className={s.users}>\n        <Paginator\n          totalUsersCount={totalUsersCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n          onPageSizeChange={onPageSizeChange}\n        />\n        <div>\n          {users.map((u) => (\n            <User\n              key={u.id}\n              user={u}\n              followingInProgress={followingInProgress}\n              follow={follow}\n              unFollow={unFollow}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Users };\n","import { AppStateType } from \"./redux-store\";\nimport { createSelector } from 'reselect'\n\ntype GetUsersType = ReturnType<typeof getUsers>;\ntype GetPageSizeType = ReturnType<typeof getPageSize>;\ntype GetTotalUsersCountType = ReturnType<typeof getTotalUsersCount>;\ntype GetCurrentPageType = ReturnType<typeof getCurrentPage>;\ntype GetIsFatchingType = ReturnType<typeof getIsFatching>;\ntype GetFollowingInProgressType = ReturnType<typeof getFollowingInProgress>\n\nexport type SelectesType = GetUsersType\n  | GetPageSizeType\n  | GetTotalUsersCountType\n  | GetCurrentPageType\n  | GetIsFatchingType\n  | GetFollowingInProgressType\n\nexport const getUsers = (state: AppStateType) => state.usersPage.users;\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize;\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount;\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage;\nexport const getIsFatching = (state: AppStateType) => state.usersPage.isFatching;\nexport const getFollowingInProgress = (state: AppStateType) => state.usersPage.followingInProgress;\n\n//selectors\nexport const publishedUsersSelector = createSelector(\n  getUsers,\n  (users)=>users.filter(u=>true)\n)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport { follow, unFollow, setCurrentPage, setFollowingInProgress, getUsersTC, UsersType, setPageSize } from '../../redux/users-reducer';\nimport { Users } from './Users';\nimport { Spinner } from '../common/Spinner/Spinner';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFatching, getFollowingInProgress, publishedUsersSelector } from '../../redux/users-selects';\n\ntype UsersPropsType = {\n  users: UsersType[];\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  isFatching: boolean;\n  followingInProgress: number[];\n  follow: (userId: number) => void;\n  unFollow: (userId: number) => void;\n  setCurrentPage: (pageNumber: number) => void;\n  setFollowingInProgress: (isFatching: boolean, userId: number) => void;\n  getUsersTC: (currentPage: number, pageSize: number) => void;\n  getPageSize: (pageNumber: number, pageSize: number) => void\n}\n\ntype MSTP = {\n   users: UsersType[]\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFatching: boolean\n   followingInProgress: number[]\n}\n\nclass UsersContainer extends React.Component<UsersPropsType> {\n  componentDidMount() {\n    const { getUsersTC, currentPage, pageSize } = this.props;\n    getUsersTC(currentPage, pageSize);\n  }\n\n  onPageChange = (pageNumber: number) => {\n    const { getUsersTC, setCurrentPage, pageSize } = this.props;\n    getUsersTC(pageNumber, pageSize);\n    setCurrentPage(pageNumber);\n    setPageSize(pageSize);\n  };\n\n  onPageSizeChange = (pageNumber: number, pageSize: number) => {\n    const { getUsersTC } = this.props;\n    getUsersTC(pageNumber, pageSize);\n    setPageSize(pageSize);\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFatching ? <Spinner /> : null}\n        <Users\n          users={this.props.users}\n          pageSize={this.props.pageSize}\n          totalUsersCount={this.props.totalUsersCount}\n          currentPage={this.props.currentPage}\n          follow={this.props.follow}\n          unFollow={this.props.unFollow}\n          onPageChange={this.onPageChange}\n          followingInProgress={this.props.followingInProgress}\n          setFollowingInProgress={this.props.setFollowingInProgress}\n          onPageSizeChange = {this.onPageSizeChange}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MSTP => {\n   return {\n      users: publishedUsersSelector(state),\n      pageSize: getPageSize(state),\n      totalUsersCount: getTotalUsersCount(state),\n      currentPage: getCurrentPage(state),\n      isFatching: getIsFatching(state),\n      followingInProgress: getFollowingInProgress(state)\n   }\n}\n\nexport default compose<React.ComponentType>(connect(mapStateToProps,\n   {\n      follow,\n      unFollow,\n      setCurrentPage,\n      setPageSize,\n      setFollowingInProgress,\n      getUsersTC,\n   }),\n   withRouter,\n   withAuthRedirect)(UsersContainer);"],"sourceRoot":""}