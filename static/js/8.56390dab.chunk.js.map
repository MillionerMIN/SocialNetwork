{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/posts/Sidebar/ProfileUser/ProfileUser.module.scss","components/posts/Sidebar/ProfileUser/ProfileUser.tsx","components/posts/Sidebar/ProfileUser/ProfileUserContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileUser","props","profile","status","updateStatus","isOwner","savePhoto","useState","editMode","setEditMode","newStatus","setNewStatus","useEffect","className","s","bg","src","profileBg","alt","photo","photos","large","profilePhoto","title","fullName","onDoubleClick","descr","onChange","e","currentTarget","onBlur","autoFocus","type","target","files","Spinner","ProfileForm","ProfileUserContainer","profileId","this","match","params","userId","authId","history","getProfileTC","getStatusTC","refreshProfile","prevProps","prevState","updateStatusTC","updatePhotoTC","React","Component","compose","connect","state","profilePage","auth","id","withRouter"],"mappings":"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","file":"static/js/8.56390dab.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileUser_profile__xc3rZ\",\"bg\":\"ProfileUser_bg__3981z\",\"photo\":\"ProfileUser_photo__ug4pU\",\"title\":\"ProfileUser_title__1xr4O\",\"descr\":\"ProfileUser_descr__3b251\",\"status\":\"ProfileUser_status__1a52q\"};","import React, { useState, useEffect } from 'react';\nimport s from './ProfileUser.module.scss';\nimport profileBg from '../../../../image/profile/ProfileImg.jpg';\nimport profilePhoto from '../../../../image/icons/user.png';\n\nimport { Spinner } from '../../../common/Spinner/Spinner';\nimport { ProfileType } from '../../../../api/usersApi';\n\ntype ProfileUserPropsType = {\n  profile: null | ProfileType;\n  status: string;\n  isOwner: boolean;\n  savePhoto: any;\n  updateStatus: (status: string) => void;\n};\n\nconst ProfileUser = (props: ProfileUserPropsType) => {\n  const { profile, status, updateStatus, isOwner, savePhoto } = props;\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [newStatus, setNewStatus] = useState<string>(status);\n\n  useEffect(() => {\n    setNewStatus(status);\n  }, [status]);\n\n  const activatedEditMod = () => {\n    setEditMode(true);\n  };\n\n  const diactivedEditModEditMod = () => {\n    setEditMode(false);\n    updateStatus(newStatus);\n  };\n\n  const onChangeStatus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewStatus(e.currentTarget.value);\n  };\n\n  const onUserPhoto = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  if (!profile) {\n    return <Spinner />;\n  }\n  return (\n    <div className={s.profile}>\n      <img className={s.bg} src={profileBg} alt=\"profileImg\" />\n      <div>\n        <img\n          className={s.photo}\n          src={profile.photos.large || profilePhoto}\n          alt=\"userPhoto\"\n        />\n      </div>\n      <div className={s.title}>{props.profile?.fullName}</div>\n      {!editMode && (\n        <div>\n            <span onDoubleClick={activatedEditMod} className={s.descr}>\n          {status || '---'}\n        </span>\n        <ProfileForm profile={profile} status={status}/>\n      \n        </div>\n      )}\n        \n      {editMode && (\n        <input\n          onChange={onChangeStatus}\n          onBlur={diactivedEditModEditMod}\n          autoFocus\n          className={s.descr}\n          value={newStatus}\n        />\n      )}\n      {isOwner && <input type=\"file\" onChange={onUserPhoto} />}\n    </div>\n  );\n};\n\n\ntype ProfileFormType = {\n  profile: ProfileType\n  status: string\n}\n\nconst ProfileForm = (props: ProfileFormType) => {\n  const {fullName}=props.profile;\n  const {status} = props;  \n  return (\n    <div>\n      <div>\n        <b>status:</b> {status}\n      </div>\n    </div>\n  );\n};\n\nexport { ProfileUser };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ProfileUser } from './ProfileUser';\nimport {\n  getProfileTC,\n  getStatusTC,\n  updateStatusTC,\n  updatePhotoTC,\n} from '../../../../redux/profile-reducer';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { AppStateType } from '../../../../redux/redux-store';\nimport { compose } from 'redux';\nimport { ProfileType } from '../../../../api/usersApi';\n\ntype ProfileUserPropsType = {};\n\ntype MapStateToPropsType = {\n  profile: null | ProfileType;\n  status: string;\n  authId: number | null;\n  photos: string;\n};\n\ntype MapDispatchToPropsType = {\n  getProfileTC: (userId: number) => void;\n  getStatusTC: (userId: number) => void;\n  updateStatusTC: (status: string) => void;\n  updatePhotoTC: (savePhoto: string) => void;\n};\n\nclass ProfileUserContainer extends React.Component<\n  RouteComponentProps<any> &\n    ProfileUserPropsType &\n    MapStateToPropsType &\n    MapDispatchToPropsType\n> {\n  refreshProfile() {\n    let profileId = this.props.match.params.userId;\n    if (!profileId) {\n      profileId = this.props.authId;\n      if (!profileId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getProfileTC(profileId);\n    this.props.getStatusTC(profileId);\n  }\n\n  componentDidMount() {\n     this.refreshProfile()\n  }\n\n  componentDidUpdate(prevProps: any, prevState: any) {\n    if (prevProps.photos !== this.props.photos) {\n       this.refreshProfile();\n    }\n    if (prevProps.status !== this.props.status) {\n       this.refreshProfile();\n    }\n  }\n  render() {\n\n    return (\n      <ProfileUser\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatusTC}\n        savePhoto={this.props.updatePhotoTC}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authId: state.auth.id,\n    photos: state.profilePage.photos,\n  };\n};\n\nexport default compose<React.ComponentType>(\n  connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps,\n    { getProfileTC, getStatusTC, updateStatusTC, updatePhotoTC }\n  ),\n  withRouter\n)(ProfileUserContainer);\n"],"sourceRoot":""}