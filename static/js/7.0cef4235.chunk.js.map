{"version":3,"sources":["components/Container.module.scss","utils/validation/validation.ts","components/common/FormControls/FormControls.tsx","components/common/FormControls/FormControls.module.scss","components/Login/Login.module.scss","components/Login/Login.tsx","components/Login/LoginContainer.tsx"],"names":["module","exports","required","value","maxLengthCreate","maxLength","length","FormControls","props","meta","error","touched","children","hasError","className","s","Textarea","input","restProps","Input","FormError","createField","name","placeholder","component","validate","text","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","htmlFor","Field","connect","state","isAuth","auth","loginTC","loginoutTC","email","login","to","c","container","Account","loginBlock","formData","password","rememberMe","LoginContainer","this","getAuthUserDataTC","id","React","Component"],"mappings":"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","file":"static/js/7.0cef4235.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lHqDY\"};","export const required = (value: any) => {\n   if (value) return undefined;\n   return 'Field is required';\n}\n\nexport const maxLengthCreate = (maxLength: number) => (value: any) => {\n   if (value && value.length > maxLength) return `Max length ${maxLength} symbels`;\n   return undefined;\n}","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport s from './FormControls.module.scss'\n\nconst FormControls = (props: any) => {\n   const { meta:{error, touched}, children } = props;\n   const hasError = error && touched\n   return (\n      <div className={hasError ? s.error : ''}>\n         {children}\n         {hasError && <span>{error}</span>}\n      </div>\n   );\n}\n\nexport const Textarea = (props: any) => {\n   const { input, ...restProps } = props;\n   return <FormControls {...props}><textarea {...input} {...restProps} /></FormControls>\n}\n\nexport const Input = (props: any) => {\n   const { input, meta, ...restProps } = props;\n   return <FormControls {...props}><input {...input} {...restProps} /></FormControls>\n}\n\nexport const FormError = (props: any) => {\n   return <FormControls {...props}><div {...props}>{props.error}</div></FormControls>\n}\n\nexport const createField = (name: string, placeholder: string | null, component = {}, validate: {}, props?: any, text='') => {\n   return <Field\n      name={name}\n      placeholder={placeholder}\n      component={component}\n      validate={validate}\n      {...props}\n      {...text}\n   />\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error___hLaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__2PPB2\",\"error\":\"Login_error__6SziI\"};","import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { AuthType, loginTC, loginoutTC } from '../../redux/auth-reducer';\nimport Account from \"./Account/Account\";\nimport s from './Login.module.scss';\nimport c from '../Container.module.scss'\nimport { FormError, Input, createField } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validation/validation';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { AppStateType } from \"../../redux/redux-store\";\n\ntype LoginPropsType = {\n   isAuth: boolean\n   auth: AuthType\n   loginTC: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype FormDataType = {\n   email: string\n   password: string\n   rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n   const { error, handleSubmit } = props\n   return (\n      <form onSubmit={handleSubmit}>\n         {createField('email', 'Email', Input, [required])}\n         {createField('password', 'Password', Input, [required], { type: 'password' })}\n         {createField('rememberMe', null, Input, [], { type: 'checkbox' }, 'rememberMe')}\n         <div>\n            <label htmlFor='rememberMe'>rememberMe</label>\n         </div>\n         \n         {error ? <div className={s.error}>\n            <Field name='error' component={FormError} />{error}\n         </div> : ''}\n         <button>LOGIN</button>\n      </form>\n   )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({\n   // a unique name for the form\n   form: 'login'\n})(LoginForm)\n\nconst Login = (props: LoginPropsType) => {\n   const { isAuth, loginTC } = props\n   const { email, login } = props.auth\n\n   const submit = (formData: FormDataType) => {\n      const { email, password, rememberMe } = formData\n      loginTC(email, password, rememberMe);\n   }\n\n   if (isAuth) {\n      return <Redirect to={'/profile'} />\n   }\n\n   return (<div className={c.container}>\n      {isAuth ? <Account email={email} login={login} /> :\n         <div className={s.loginBlock}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={submit} />\n         </div>\n      }\n   </div>);\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n   isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { loginTC, loginoutTC })(Login)","import React from 'react';\nimport { connect } from 'react-redux';\nimport Login from './Login';\nimport { getAuthUserDataTC, AuthType } from '../../redux/auth-reducer';\nimport { AppStateType } from '../../redux/redux-store';\n\ntype LoginContainerType = {\n   getAuthUserDataTC: (\n      id: null | number,\n      email: null | string,\n      login: null | string) => void\n}\n\nclass LoginContainer extends React.Component<LoginContainerType & mapStateToPropsType> {\n\n   componentDidMount() {\n      const { getAuthUserDataTC, auth } = this.props\n      getAuthUserDataTC(auth.id, auth.email, auth.email)\n   }\n   render() {\n      return <Login {...this.props} />\n   }\n}\n\ntype mapStateToPropsType = {\n   auth: AuthType\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n   return {\n      auth: state.auth\n   }\n}\n\nexport default connect(mapStateToProps, { getAuthUserDataTC })(LoginContainer)"],"sourceRoot":""}